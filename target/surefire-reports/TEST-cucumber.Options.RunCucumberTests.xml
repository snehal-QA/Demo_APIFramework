<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="cucumber.Options.RunCucumberTests" time="90.262" tests="75" errors="0" skipped="0" failures="32">
  <properties>
    <property name="java.specification.version" value="16"/>
    <property name="log4j.configurationFile" value="C:\SnehProjects\DemoProject\Demo_APIFramework/src/test/resources/log4j.xml"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\SnehProjects\DemoProject\Demo_APIFramework\target\test-classes;C:\SnehProjects\DemoProject\Demo_APIFramework\target\classes;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-testng\6.11.0\cucumber-testng-6.11.0.jar;C:\Users\abhij\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-core\6.11.0\cucumber-core-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-gherkin\6.11.0\cucumber-gherkin-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-gherkin-messages\6.11.0\cucumber-gherkin-messages-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\messages\15.0.0\messages-15.0.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\tag-expressions\3.0.1\tag-expressions-3.0.1.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-expressions\10.3.0\cucumber-expressions-10.3.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\datatable\3.5.0\datatable-3.5.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-plugin\6.11.0\cucumber-plugin-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\docstring\6.11.0\docstring-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\html-formatter\13.0.0\html-formatter-13.0.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\create-meta\4.0.0\create-meta-4.0.0.jar;C:\Users\abhij\.m2\repository\org\testng\testng\7.3.0\testng-7.3.0.jar;C:\Users\abhij\.m2\repository\com\beust\jcommander\1.78\jcommander-1.78.jar;C:\Users\abhij\.m2\repository\org\apache\ant\ant\1.10.3\ant-1.10.3.jar;C:\Users\abhij\.m2\repository\org\apache\ant\ant-launcher\1.10.3\ant-launcher-1.10.3.jar;C:\Users\abhij\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\abhij\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\abhij\.m2\repository\com\google\inject\guice\4.2.2\guice-4.2.2-no_aop.jar;C:\Users\abhij\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\abhij\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\abhij\.m2\repository\com\google\guava\guava\25.1-android\guava-25.1-android.jar;C:\Users\abhij\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\abhij\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;C:\Users\abhij\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\abhij\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\abhij\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\abhij\.m2\repository\org\yaml\snakeyaml\1.21\snakeyaml-1.21.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-java\6.11.0\cucumber-java-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-picocontainer\6.11.0\cucumber-picocontainer-6.11.0.jar;C:\Users\abhij\.m2\repository\org\picocontainer\picocontainer\2.15\picocontainer-2.15.jar;C:\Users\abhij\.m2\repository\io\rest-assured\rest-assured\4.3.3\rest-assured-4.3.3.jar;C:\Users\abhij\.m2\repository\org\codehaus\groovy\groovy\3.0.7\groovy-3.0.7.jar;C:\Users\abhij\.m2\repository\org\codehaus\groovy\groovy-xml\3.0.7\groovy-xml-3.0.7.jar;C:\Users\abhij\.m2\repository\org\apache\httpcomponents\httpclient\4.5.3\httpclient-4.5.3.jar;C:\Users\abhij\.m2\repository\org\apache\httpcomponents\httpcore\4.4.6\httpcore-4.4.6.jar;C:\Users\abhij\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\abhij\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\abhij\.m2\repository\org\apache\httpcomponents\httpmime\4.5.3\httpmime-4.5.3.jar;C:\Users\abhij\.m2\repository\org\hamcrest\hamcrest\2.1\hamcrest-2.1.jar;C:\Users\abhij\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\abhij\.m2\repository\io\rest-assured\json-path\4.3.3\json-path-4.3.3.jar;C:\Users\abhij\.m2\repository\org\codehaus\groovy\groovy-json\3.0.7\groovy-json-3.0.7.jar;C:\Users\abhij\.m2\repository\io\rest-assured\rest-assured-common\4.3.3\rest-assured-common-4.3.3.jar;C:\Users\abhij\.m2\repository\io\rest-assured\xml-path\4.3.3\xml-path-4.3.3.jar;C:\Users\abhij\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\abhij\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\abhij\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.3\jaxb-impl-2.3.3.jar;C:\Users\abhij\.m2\repository\org\apache\logging\log4j\log4j-api\2.14.1\log4j-api-2.14.1.jar;C:\Users\abhij\.m2\repository\org\apache\logging\log4j\log4j-core\2.14.1\log4j-core-2.14.1.jar;C:\Users\abhij\.m2\repository\org\json\json\20210307\json-20210307.jar;C:\Users\abhij\.m2\repository\com\github\javafaker\javafaker\1.0.2\javafaker-1.0.2.jar;C:\Users\abhij\.m2\repository\org\apache\commons\commons-lang3\3.5\commons-lang3-3.5.jar;C:\Users\abhij\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23-android.jar;C:\Users\abhij\.m2\repository\com\github\mifmif\generex\1.0.2\generex-1.0.2.jar;C:\Users\abhij\.m2\repository\dk\brics\automaton\automaton\1.11-8\automaton-1.11-8.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Amsterdam"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="16"/>
    <property name="logoutputpath" value="C:\SnehProjects\DemoProject\Demo_APIFramework"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-16.0.1\bin"/>
    <property name="sun.java.command" value="C:\Users\abhij\AppData\Local\Temp\surefire7106678278974605366\surefirebooter3061724617301395745.jar C:\Users\abhij\AppData\Local\Temp\surefire7106678278974605366 2021-08-23T21-35-15_746-jvmRun1 surefire9029004631402449318tmp surefire_05561415965729801678tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\SnehProjects\DemoProject\Demo_APIFramework\target\test-classes;C:\SnehProjects\DemoProject\Demo_APIFramework\target\classes;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-testng\6.11.0\cucumber-testng-6.11.0.jar;C:\Users\abhij\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-core\6.11.0\cucumber-core-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-gherkin\6.11.0\cucumber-gherkin-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-gherkin-messages\6.11.0\cucumber-gherkin-messages-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\messages\15.0.0\messages-15.0.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\tag-expressions\3.0.1\tag-expressions-3.0.1.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-expressions\10.3.0\cucumber-expressions-10.3.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\datatable\3.5.0\datatable-3.5.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-plugin\6.11.0\cucumber-plugin-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\docstring\6.11.0\docstring-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\html-formatter\13.0.0\html-formatter-13.0.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\create-meta\4.0.0\create-meta-4.0.0.jar;C:\Users\abhij\.m2\repository\org\testng\testng\7.3.0\testng-7.3.0.jar;C:\Users\abhij\.m2\repository\com\beust\jcommander\1.78\jcommander-1.78.jar;C:\Users\abhij\.m2\repository\org\apache\ant\ant\1.10.3\ant-1.10.3.jar;C:\Users\abhij\.m2\repository\org\apache\ant\ant-launcher\1.10.3\ant-launcher-1.10.3.jar;C:\Users\abhij\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\abhij\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\abhij\.m2\repository\com\google\inject\guice\4.2.2\guice-4.2.2-no_aop.jar;C:\Users\abhij\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\abhij\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\abhij\.m2\repository\com\google\guava\guava\25.1-android\guava-25.1-android.jar;C:\Users\abhij\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\abhij\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;C:\Users\abhij\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\abhij\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\abhij\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\abhij\.m2\repository\org\yaml\snakeyaml\1.21\snakeyaml-1.21.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-java\6.11.0\cucumber-java-6.11.0.jar;C:\Users\abhij\.m2\repository\io\cucumber\cucumber-picocontainer\6.11.0\cucumber-picocontainer-6.11.0.jar;C:\Users\abhij\.m2\repository\org\picocontainer\picocontainer\2.15\picocontainer-2.15.jar;C:\Users\abhij\.m2\repository\io\rest-assured\rest-assured\4.3.3\rest-assured-4.3.3.jar;C:\Users\abhij\.m2\repository\org\codehaus\groovy\groovy\3.0.7\groovy-3.0.7.jar;C:\Users\abhij\.m2\repository\org\codehaus\groovy\groovy-xml\3.0.7\groovy-xml-3.0.7.jar;C:\Users\abhij\.m2\repository\org\apache\httpcomponents\httpclient\4.5.3\httpclient-4.5.3.jar;C:\Users\abhij\.m2\repository\org\apache\httpcomponents\httpcore\4.4.6\httpcore-4.4.6.jar;C:\Users\abhij\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\abhij\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\abhij\.m2\repository\org\apache\httpcomponents\httpmime\4.5.3\httpmime-4.5.3.jar;C:\Users\abhij\.m2\repository\org\hamcrest\hamcrest\2.1\hamcrest-2.1.jar;C:\Users\abhij\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\abhij\.m2\repository\io\rest-assured\json-path\4.3.3\json-path-4.3.3.jar;C:\Users\abhij\.m2\repository\org\codehaus\groovy\groovy-json\3.0.7\groovy-json-3.0.7.jar;C:\Users\abhij\.m2\repository\io\rest-assured\rest-assured-common\4.3.3\rest-assured-common-4.3.3.jar;C:\Users\abhij\.m2\repository\io\rest-assured\xml-path\4.3.3\xml-path-4.3.3.jar;C:\Users\abhij\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\abhij\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\abhij\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.3\jaxb-impl-2.3.3.jar;C:\Users\abhij\.m2\repository\org\apache\logging\log4j\log4j-api\2.14.1\log4j-api-2.14.1.jar;C:\Users\abhij\.m2\repository\org\apache\logging\log4j\log4j-core\2.14.1\log4j-core-2.14.1.jar;C:\Users\abhij\.m2\repository\org\json\json\20210307\json-20210307.jar;C:\Users\abhij\.m2\repository\com\github\javafaker\javafaker\1.0.2\javafaker-1.0.2.jar;C:\Users\abhij\.m2\repository\org\apache\commons\commons-lang3\3.5\commons-lang3-3.5.jar;C:\Users\abhij\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23-android.jar;C:\Users\abhij\.m2\repository\com\github\mifmif\generex\1.0.2\generex-1.0.2.jar;C:\Users\abhij\.m2\repository\dk\brics\automaton\automaton\1.11-8\automaton-1.11-8.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\abhij"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2021-04-20"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-16.0.1"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\SnehProjects\DemoProject\Demo_APIFramework"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\abhij\AppData\Local\Temp\surefire7106678278974605366\surefirebooter3061724617301395745.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="16.0.1+9-24"/>
    <property name="user.name" value="abhij"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\abhij\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\abhij\AppData\Local\Temp\"/>
    <property name="java.version" value="16.0.1"/>
    <property name="user.dir" value="C:\SnehProjects\DemoProject\Demo_APIFramework"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-16.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\jdk-15.0.2\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\apache-maven-3.8.2\bin;C:\Users\abhij\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\abhij\AppData\Local\Programs\Python\Python39\;C:\Users\abhij\AppData\Local\Microsoft\WindowsApps;C:\Users\abhij\AppData\Roaming\npm;C:\Program Files\apache-maven-3.8.2\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="16.0.1+9-24"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="60.0"/>
  </properties>
  <testcase name="runScenario[&quot;Validates beneficiary is not added when account_name key is missing from bankdetails jsonobject&quot;, &quot;Optional[Validates Account_Name in Bank_details]&quot;](1)" classname="cucumber.Options.RunCucumberTests" time="5.522">
    <system-out><![CDATA[
@SchemaValidation
Scenario: Validates beneficiary is not added when account_name key is missing from bankdetails jsonobject &amp#27;[90m# src/test/resources/features/Account_Name.feature:7&amp#27;[0m
2021-08-23 21:35:18,495 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:18,500 [INFO  ] Log - >> Validates beneficiary is not added when account_name key is missing from bankdetails jsonobject
2021-08-23 21:35:18,500 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:21,405 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                              &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:21,407 [INFO  ] Log - >> Request PayLoad Created with all keys, except without  account_name
2021-08-23 21:35:21,417 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys without &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_name"&amp#27;[0m                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_without_bank_country_code(java.lang.String)&amp#27;[0m
2021-08-23 21:35:22,616 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:22,682 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "This field is required",
    "source": "beneficiary.bank_details.account_name"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "This field is required",
        "source": "beneficiary.bank_details.account_name"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                       &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:22,696 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:22,701 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:22,721 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:22,767 [INFO  ] Log - >> Response message contains value This field is required
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"This field is required"&amp#27;[0m                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:22,799 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_name
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_name"&amp#27;[0m                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is not added when account_name value is Empty&quot;, &quot;Optional[Validates Account_Name in Bank_details]&quot;](2)" classname="cucumber.Options.RunCucumberTests" time="2.497">
    <system-out><![CDATA[
@SchemaValidation
Scenario: Validates beneficiary is not added when account_name value is Empty              &amp#27;[90m# src/test/resources/features/Account_Name.feature:17&amp#27;[0m
2021-08-23 21:35:22,856 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:22,856 [INFO  ] Log - >> Validates beneficiary is not added when account_name value is Empty
2021-08-23 21:35:22,857 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:24,067 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                               &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:24,070 [INFO  ] Log - >> Request PayLoad Created with all keys, with account_name value is Empty
2021-08-23 21:35:24,070 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_name"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Empty"&amp#27;[0m &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:25,199 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:25,201 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "This field is required",
    "source": "beneficiary.bank_details.account_name"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "This field is required",
        "source": "beneficiary.bank_details.account_name"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:25,205 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:25,207 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:25,238 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                         &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:25,276 [INFO  ] Log - >> Response message contains value This field is required
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"This field is required"&amp#27;[0m                                &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:25,318 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_name
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_name"&amp#27;[0m                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; US when &quot;account_name&quot; U has invalid no. of characters 1&quot;, &quot;Optional[Validates Account_Name in Bank_details]&quot;](3)" classname="cucumber.Options.RunCucumberTests" time="1.836">
    <failure message="The following asserts failed:&#10;	expected [Length of account_name should be between {Min} and {Max} when bank_country_code is US] but found [Should contain 2 to 200 characters]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [Length of account_name should be between {Min} and {Max} when bank_country_code is US] but found [Should contain 2 to 200 characters]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNameLength @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" US when "account_name" U has invalid no. of characters 1 &amp#27;[90m# src/test/resources/features/Account_Name.feature:38&amp#27;[0m
2021-08-23 21:35:25,371 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:25,371 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" US when "account_name" U has invalid no. of characters 1
2021-08-23 21:35:25,371 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:25,911 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                           &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:25,913 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:25,914 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "U",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "U",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_name"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"U"&amp#27;[0m                     &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:27,014 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:27,016 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain 2 to 200 characters",
    "source": "beneficiary.bank_details.account_name"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain 2 to 200 characters",
        "source": "beneficiary.bank_details.account_name"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                    &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:27,019 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:27,020 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:27,051 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:27,093 [INFO  ] Log - >> Response message contains value Should contain 2 to 200 characters
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Length of account_name should be between {Min} and {Max} when bank_country_code is US"&amp#27;[0m             &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:27,140 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_name
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_name"&amp#27;[0m                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [Length of account_name should be between {Min} and {Max} when bank_country_code is US] but found [Should contain 2 to 200 characters]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; AU when &quot;account_name&quot; a has invalid no. of characters 1&quot;, &quot;Optional[Validates Account_Name in Bank_details]&quot;](4)" classname="cucumber.Options.RunCucumberTests" time="2.442">
    <failure message="The following asserts failed:&#10;	expected [Length of account_name should be between {Min} and {Max} when bank_country_code is AU] but found [Should contain 2 to 200 characters]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [Length of account_name should be between {Min} and {Max} when bank_country_code is AU] but found [Should contain 2 to 200 characters]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNameLength @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" AU when "account_name" a has invalid no. of characters 1 &amp#27;[90m# src/test/resources/features/Account_Name.feature:39&amp#27;[0m
2021-08-23 21:35:27,207 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:27,212 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" AU when "account_name" a has invalid no. of characters 1
2021-08-23 21:35:27,213 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:28,422 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                           &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:28,424 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:28,425 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "a",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "a",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_name"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"a"&amp#27;[0m                     &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:29,528 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:29,530 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain 2 to 200 characters",
    "source": "beneficiary.bank_details.account_name"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain 2 to 200 characters",
        "source": "beneficiary.bank_details.account_name"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                    &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:29,533 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:29,534 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:29,550 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:29,579 [INFO  ] Log - >> Response message contains value Should contain 2 to 200 characters
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Length of account_name should be between {Min} and {Max} when bank_country_code is AU"&amp#27;[0m             &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:29,605 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_name
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_name"&amp#27;[0m                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [Length of account_name should be between {Min} and {Max} when bank_country_code is AU] but found [Should contain 2 to 200 characters]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; CN when &quot;account_name&quot; G has invalid no. of characters 1&quot;, &quot;Optional[Validates Account_Name in Bank_details]&quot;](5)" classname="cucumber.Options.RunCucumberTests" time="1.654">
    <failure message="The following asserts failed:&#10;	expected [Length of account_name should be between {Min} and {Max} when bank_country_code is CN] but found [Should contain 2 to 200 characters]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [Length of account_name should be between {Min} and {Max} when bank_country_code is CN] but found [Should contain 2 to 200 characters]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNameLength @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" CN when "account_name" G has invalid no. of characters 1 &amp#27;[90m# src/test/resources/features/Account_Name.feature:40&amp#27;[0m
2021-08-23 21:35:29,634 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:29,634 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" CN when "account_name" G has invalid no. of characters 1
2021-08-23 21:35:29,634 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:30,093 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                           &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:30,094 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:30,095 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "ICBKCNBJ",
            "account_name": "G",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "ICBKCNBJ",
                "account_name": "G",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_name"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"G"&amp#27;[0m                     &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:31,152 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:31,158 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain 2 to 200 characters",
    "source": "beneficiary.bank_details.account_name"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain 2 to 200 characters",
        "source": "beneficiary.bank_details.account_name"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                    &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:31,161 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:31,162 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:31,195 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:31,233 [INFO  ] Log - >> Response message contains value Should contain 2 to 200 characters
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Length of account_name should be between {Min} and {Max} when bank_country_code is CN"&amp#27;[0m             &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:31,275 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_name
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_name"&amp#27;[0m                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [Length of account_name should be between {Min} and {Max} when bank_country_code is CN] but found [Should contain 2 to 200 characters]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; CN when &quot;account_name&quot; asfsf4567w3 has invalid no. of characters 11&quot;, &quot;Optional[Validates Account_Name in Bank_details]&quot;](6)" classname="cucumber.Options.RunCucumberTests" time="2.435">
    <failure message="Cannot invoke &quot;Object.toString()&quot; because the return value of &quot;io.restassured.path.json.JsonPath.get(String)&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNameLength @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" CN when "account_name" asfsf4567w3 has invalid no. of characters 11 &amp#27;[90m# src/test/resources/features/Account_Name.feature:41&amp#27;[0m
2021-08-23 21:35:31,308 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:31,309 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" CN when "account_name" asfsf4567w3 has invalid no. of characters 11
2021-08-23 21:35:31,309 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:32,451 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                      &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:32,452 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:32,452 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "ICBKCNBJ",
            "account_name": "asfsf4567w3",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "ICBKCNBJ",
                "account_name": "asfsf4567w3",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_name"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"asfsf4567w3"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:33,627 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:33,629 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "CN",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "CAD",
            "account_name": "asfsf4567w3",
            "account_number": "12750852",
            "account_routing_type1": "aba",
            "account_routing_value1": "083064",
            "bank_country_code": "CN",
            "bank_name": "National Canadian Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "ICBKCNBJ"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "6f4496b5-0d2c-46d9-8d9d-5381bf7bb727",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "CN",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "CAD",
                "account_name": "asfsf4567w3",
                "account_number": "12750852",
                "account_routing_type1": "aba",
                "account_routing_value1": "083064",
                "bank_country_code": "CN",
                "bank_name": "National Canadian Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "ICBKCNBJ"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "6f4496b5-0d2c-46d9-8d9d-5381bf7bb727",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                               &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:33,634 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:33,637 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mResponse &amp#27;[0m&amp#27;[31m&amp#27;[1m"code"&amp#27;[0m&amp#27;[31m has value &amp#27;[0m&amp#27;[31m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
	at utilities.Json_handler.getJsonPath(Json_handler.java:21)
	at stepDefinitions.Then_Steps.response_contains_value(Then_Steps.java:57)
	at âœ½.Response "code" has value "payment_schema_validation_failed"(file:///C:/SnehProjects/DemoProject/Demo_APIFramework/src/test/resources/features/Account_Name.feature:32)
&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"message"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"Length of account_name should be between {Min} and {Max} when bank_country_code is CN"&amp#27;[0m                        &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"source"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"beneficiary.bank_details.account_name"&amp#27;[0m                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [400] but found [201],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate correct response is returned for &quot;bank_country_code&quot; US when &quot;account_name&quot; UA has valid no. of characters 2&quot;, &quot;Optional[Validates Account_Name in Bank_details]&quot;](7)" classname="cucumber.Options.RunCucumberTests" time="1.617">
    <system-out><![CDATA[
@PositiveScenarios @AcctName_allSpecialCharAllowed
Scenario Outline: Validate correct response is returned for "bank_country_code" US when "account_name" UA has valid no. of characters 2 &amp#27;[90m# src/test/resources/features/Account_Name.feature:52&amp#27;[0m
2021-08-23 21:35:33,706 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:33,707 [INFO  ] Log - >> Validate correct response is returned for "bank_country_code" US when "account_name" UA has valid no. of characters 2
2021-08-23 21:35:33,707 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:34,907 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                            &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:34,909 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:34,910 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "UA",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "UA",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_name"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"UA"&amp#27;[0m                     &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:35,286 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:35,288 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "UA",
            "account_number": "502231121",
            "account_routing_type1": "aba",
            "account_routing_value1": "907765701",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "3cab7dcf-0bda-4584-a433-a46ab27460ab",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "UA",
                "account_number": "502231121",
                "account_routing_type1": "aba",
                "account_routing_value1": "907765701",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "3cab7dcf-0bda-4584-a433-a46ab27460ab",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                     &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:35,291 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                      &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:35,293 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate correct response is returned for &quot;bank_country_code&quot; AU when &quot;account_name&quot; @@ has valid no. of characters 1&quot;, &quot;Optional[Validates Account_Name in Bank_details]&quot;](8)" classname="cucumber.Options.RunCucumberTests" time="1.616">
    <system-out><![CDATA[
@PositiveScenarios @AcctName_allSpecialCharAllowed
Scenario Outline: Validate correct response is returned for "bank_country_code" AU when "account_name" @@ has valid no. of characters 1 &amp#27;[90m# src/test/resources/features/Account_Name.feature:53&amp#27;[0m
2021-08-23 21:35:35,314 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:35,315 [INFO  ] Log - >> Validate correct response is returned for "bank_country_code" AU when "account_name" @@ has valid no. of characters 1
2021-08-23 21:35:35,316 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:36,516 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                            &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:36,518 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:36,519 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "@@",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "@@",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_name"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"@@"&amp#27;[0m                     &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:36,908 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:36,911 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "@@",
            "account_number": "12750852",
            "account_routing_type1": "bsb",
            "account_routing_value1": "083064",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "a5b93850-3521-4ece-b4e8-8e91034eb495",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "@@",
                "account_number": "12750852",
                "account_routing_type1": "bsb",
                "account_routing_value1": "083064",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "a5b93850-3521-4ece-b4e8-8e91034eb495",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                     &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:36,918 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                      &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:36,919 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate correct response is returned for &quot;bank_country_code&quot; AU when &quot;account_name&quot; ()[aE1&lt;:! has valid no. of characters 1&quot;, &quot;Optional[Validates Account_Name in Bank_details]&quot;](9)" classname="cucumber.Options.RunCucumberTests" time="2.267">
    <system-out><![CDATA[
@PositiveScenarios @AcctName_allSpecialCharAllowed
Scenario Outline: Validate correct response is returned for "bank_country_code" AU when "account_name" ()[aE1<:! has valid no. of characters 1 &amp#27;[90m# src/test/resources/features/Account_Name.feature:54&amp#27;[0m
2021-08-23 21:35:36,935 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:36,936 [INFO  ] Log - >> Validate correct response is returned for "bank_country_code" AU when "account_name" ()[aE1<:! has valid no. of characters 1
2021-08-23 21:35:36,936 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:38,094 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                   &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:38,095 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:38,096 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "()[aE1<:!",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "()[aE1<:!",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_name"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"()[aE1<:!"&amp#27;[0m                     &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:39,171 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:39,174 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "()[aE1<:!",
            "account_number": "12750852",
            "account_routing_type1": "bsb",
            "account_routing_value1": "083064",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "1d492775-e718-4cb1-8dd6-f118f88cd9cd",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "()[aE1<:!",
                "account_number": "12750852",
                "account_routing_type1": "bsb",
                "account_routing_value1": "083064",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "1d492775-e718-4cb1-8dd6-f118f88cd9cd",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                            &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:39,178 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:39,179 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate correct response is returned for &quot;bank_country_code&quot; US when &quot;account_name&quot; asfsf4567w has valid no. of characters 10&quot;, &quot;Optional[Validates Account_Name in Bank_details]&quot;](10)" classname="cucumber.Options.RunCucumberTests" time="1.605">
    <system-out><![CDATA[
@PositiveScenarios @AcctName_allSpecialCharAllowed
Scenario Outline: Validate correct response is returned for "bank_country_code" US when "account_name" asfsf4567w has valid no. of characters 10 &amp#27;[90m# src/test/resources/features/Account_Name.feature:55&amp#27;[0m
2021-08-23 21:35:39,202 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:39,203 [INFO  ] Log - >> Validate correct response is returned for "bank_country_code" US when "account_name" asfsf4567w has valid no. of characters 10
2021-08-23 21:35:39,203 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:40,415 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                     &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:40,417 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:40,417 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "asfsf4567w",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "asfsf4567w",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_name"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"asfsf4567w"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:40,791 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:40,793 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "asfsf4567w",
            "account_number": "502231121",
            "account_routing_type1": "aba",
            "account_routing_value1": "907765701",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "baa2206a-8106-41f2-ba6f-5d990fa2fab8",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "asfsf4567w",
                "account_number": "502231121",
                "account_routing_type1": "aba",
                "account_routing_value1": "907765701",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "baa2206a-8106-41f2-ba6f-5d990fa2fab8",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                              &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:40,795 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:40,796 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                          &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is not added when account_number key is missing from bankdetails jsonobject&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](11)" classname="cucumber.Options.RunCucumberTests" time="0.903">
    <system-out><![CDATA[
@SchemaValidation
Scenario: Validates beneficiary is not added when account_number key is missing from bankdetails jsonobject &amp#27;[90m# src/test/resources/features/Account_Number.feature:7&amp#27;[0m
2021-08-23 21:35:40,809 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:40,810 [INFO  ] Log - >> Validates beneficiary is not added when account_number key is missing from bankdetails jsonobject
2021-08-23 21:35:40,810 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:41,246 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:41,250 [INFO  ] Log - >> Request PayLoad Created with all keys, except without  account_number
2021-08-23 21:35:41,250 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys without &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_without_bank_country_code(java.lang.String)&amp#27;[0m
2021-08-23 21:35:41,622 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:41,623 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "This field is required",
    "source": "beneficiary.bank_details.account_number"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "This field is required",
        "source": "beneficiary.bank_details.account_number"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                         &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:41,625 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                          &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:41,625 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:41,643 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                          &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:41,683 [INFO  ] Log - >> Response message contains value This field is required
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"This field is required"&amp#27;[0m                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:41,718 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_number
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is not added when account_number value is Empty&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](12)" classname="cucumber.Options.RunCucumberTests" time="1.029">
    <system-out><![CDATA[
@SchemaValidation
Scenario: Validates beneficiary is not added when account_number value is Empty              &amp#27;[90m# src/test/resources/features/Account_Number.feature:17&amp#27;[0m
2021-08-23 21:35:41,765 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:41,766 [INFO  ] Log - >> Validates beneficiary is not added when account_number value is Empty
2021-08-23 21:35:41,766 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:42,223 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                 &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:42,225 [INFO  ] Log - >> Request PayLoad Created with all keys, with account_number value is Empty
2021-08-23 21:35:42,225 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Empty"&amp#27;[0m &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:42,678 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:42,680 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "This field is required",
    "source": "beneficiary.bank_details.account_number"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "This field is required",
        "source": "beneficiary.bank_details.account_number"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                          &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:42,682 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:42,683 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:42,699 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                           &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:42,734 [INFO  ] Log - >> Response message contains value This field is required
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"This field is required"&amp#27;[0m                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:42,758 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_number
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate beneficiary is sucessfully added for &quot;bank_country_code&quot; &lt;bank_country_code&gt; when &quot;account_number&quot; AGT-789IJY-T2345 contains special characters&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](13)" classname="cucumber.Options.RunCucumberTests" time="0.959">
    <failure message="The following asserts failed:&#10;	expected [201] but found [400],&#10;	expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [201] but found [400],
	expected [true] but found [false]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber
Scenario Outline: Validate beneficiary is sucessfully added for "bank_country_code" <bank_country_code> when "account_number" AGT-789IJY-T2345 contains special characters &amp#27;[90m# src/test/resources/features/Account_Number.feature:35&amp#27;[0m
2021-08-23 21:35:42,790 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:42,791 [INFO  ] Log - >> Validate beneficiary is sucessfully added for "bank_country_code" <bank_country_code> when "account_number" AGT-789IJY-T2345 contains special characters
2021-08-23 21:35:42,791 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:43,246 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                               &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:43,247 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:43,248 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "AGT-789IJY-T2345",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "AGT-789IJY-T2345",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AGT-789IJY-T2345"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:43,702 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:43,703 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain alphanumeric characters only",
    "source": "beneficiary.bank_details.account_number"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain alphanumeric characters only",
        "source": "beneficiary.bank_details.account_number"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                        &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:43,705 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:43,706 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [201] but found [400],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate beneficiary is sucessfully added for &quot;bank_country_code&quot; &lt;bank_country_code&gt; when &quot;account_number&quot; AGT:789 contains special characters&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](14)" classname="cucumber.Options.RunCucumberTests" time="0.923">
    <failure message="The following asserts failed:&#10;	expected [201] but found [400],&#10;	expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [201] but found [400],
	expected [true] but found [false]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber
Scenario Outline: Validate beneficiary is sucessfully added for "bank_country_code" <bank_country_code> when "account_number" AGT:789 contains special characters &amp#27;[90m# src/test/resources/features/Account_Number.feature:36&amp#27;[0m
2021-08-23 21:35:43,724 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:43,725 [INFO  ] Log - >> Validate beneficiary is sucessfully added for "bank_country_code" <bank_country_code> when "account_number" AGT:789 contains special characters
2021-08-23 21:35:43,725 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:44,224 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                      &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:44,225 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:44,226 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "AGT:789",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "AGT:789",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AGT:789"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:44,624 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:44,625 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain alphanumeric characters only",
    "source": "beneficiary.bank_details.account_number"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain alphanumeric characters only",
        "source": "beneficiary.bank_details.account_number"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                               &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:44,627 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:44,629 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [201] but found [400],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate beneficiary is sucessfully added for &quot;bank_country_code&quot; &lt;bank_country_code&gt; when &quot;account_number&quot; AGT 789IJY T2345 contains special characters&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](15)" classname="cucumber.Options.RunCucumberTests" time="1.627">
    <failure message="The following asserts failed:&#10;	expected [201] but found [400],&#10;	expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [201] but found [400],
	expected [true] but found [false]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber
Scenario Outline: Validate beneficiary is sucessfully added for "bank_country_code" <bank_country_code> when "account_number" AGT 789IJY T2345 contains special characters &amp#27;[90m# src/test/resources/features/Account_Number.feature:37&amp#27;[0m
2021-08-23 21:35:44,647 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:44,648 [INFO  ] Log - >> Validate beneficiary is sucessfully added for "bank_country_code" <bank_country_code> when "account_number" AGT 789IJY T2345 contains special characters
2021-08-23 21:35:44,648 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:45,805 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                               &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:45,807 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:45,807 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "AGT 789IJY T2345",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "ICBKCNBJ",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "AGT 789IJY T2345",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "ICBKCNBJ",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AGT 789IJY T2345"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:46,263 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:46,265 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain alphanumeric characters only",
    "source": "beneficiary.bank_details.account_number"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain alphanumeric characters only",
        "source": "beneficiary.bank_details.account_number"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                        &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:46,267 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:46,268 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [201] but found [400],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; US when &quot;account_number&quot; asedr5432GHUYJIO2345 has invalid no. of characters 20&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](16)" classname="cucumber.Options.RunCucumberTests" time="1.694">
    <failure message="Cannot invoke &quot;Object.toString()&quot; because the return value of &quot;io.restassured.path.json.JsonPath.get(String)&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" US when "account_number" asedr5432GHUYJIO2345 has invalid no. of characters 20 &amp#27;[90m# src/test/resources/features/Account_Number.feature:51&amp#27;[0m
2021-08-23 21:35:46,300 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:46,301 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" US when "account_number" asedr5432GHUYJIO2345 has invalid no. of characters 20
2021-08-23 21:35:46,301 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:46,751 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                 &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:46,753 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:46,754 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "asedr5432GHUYJIO2345",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "asedr5432GHUYJIO2345",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"asedr5432GHUYJIO2345"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:47,901 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:47,903 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "John Walker",
            "account_number": "asedr5432GHUYJIO2345",
            "account_routing_type1": "aba",
            "account_routing_value1": "907765701",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "59ae01f8-b444-4196-ab3b-615c4404d7dc",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "John Walker",
                "account_number": "asedr5432GHUYJIO2345",
                "account_routing_type1": "aba",
                "account_routing_value1": "907765701",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "59ae01f8-b444-4196-ab3b-615c4404d7dc",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                          &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:47,906 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:47,909 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mResponse &amp#27;[0m&amp#27;[31m&amp#27;[1m"code"&amp#27;[0m&amp#27;[31m has value &amp#27;[0m&amp#27;[31m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
	at utilities.Json_handler.getJsonPath(Json_handler.java:21)
	at stepDefinitions.Then_Steps.response_contains_value(Then_Steps.java:57)
	at âœ½.Response "code" has value "payment_schema_validation_failed"(file:///C:/SnehProjects/DemoProject/Demo_APIFramework/src/test/resources/features/Account_Number.feature:45)
&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"message"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"Length of account_number should be between 1 and 17 when bank_country_code is US"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"source"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [400] but found [201],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; US when &quot;account_number&quot; asedr5432GHUYJIO23451321432 has invalid no. of characters 26&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](17)" classname="cucumber.Options.RunCucumberTests" time="1.036">
    <failure message="The following asserts failed:&#10;	expected [Length of account_number should be between 1 and 17 when bank_country_code is US] but found [Should contain 1 to 26 characters]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [Length of account_number should be between 1 and 17 when bank_country_code is US] but found [Should contain 1 to 26 characters]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" US when "account_number" asedr5432GHUYJIO23451321432 has invalid no. of characters 26 &amp#27;[90m# src/test/resources/features/Account_Number.feature:52&amp#27;[0m
2021-08-23 21:35:47,953 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:47,954 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" US when "account_number" asedr5432GHUYJIO23451321432 has invalid no. of characters 26
2021-08-23 21:35:47,954 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:48,447 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:48,449 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:48,449 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "asedr5432GHUYJIO23451321432",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "asedr5432GHUYJIO23451321432",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"asedr5432GHUYJIO23451321432"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:48,822 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:48,824 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain 1 to 26 characters",
    "source": "beneficiary.bank_details.account_number"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain 1 to 26 characters",
        "source": "beneficiary.bank_details.account_number"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                 &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:48,825 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:48,827 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:48,842 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:48,972 [INFO  ] Log - >> Response message contains value Should contain 1 to 26 characters
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Length of account_number should be between 1 and 17 when bank_country_code is US"&amp#27;[0m                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:49,001 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_number
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [Length of account_number should be between 1 and 17 when bank_country_code is US] but found [Should contain 1 to 26 characters]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; AU when &quot;account_number&quot; MJIKH has invalid no. of characters 5&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](18)" classname="cucumber.Options.RunCucumberTests" time="1.715">
    <failure message="The following asserts failed:&#10;	expected [Length of account_number should be between 6 and 9 when bank_country_code is AU] but found [Should contain 6 to 20 characters]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [Length of account_number should be between 6 and 9 when bank_country_code is AU] but found [Should contain 6 to 20 characters]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" AU when "account_number" MJIKH has invalid no. of characters 5 &amp#27;[90m# src/test/resources/features/Account_Number.feature:53&amp#27;[0m
2021-08-23 21:35:49,022 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:49,022 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" AU when "account_number" MJIKH has invalid no. of characters 5
2021-08-23 21:35:49,022 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:49,555 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                 &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:49,556 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:49,557 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "MJIKH",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "MJIKH",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"MJIKH"&amp#27;[0m                     &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:50,628 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:50,630 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain 6 to 20 characters",
    "source": "beneficiary.bank_details.account_number"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain 6 to 20 characters",
        "source": "beneficiary.bank_details.account_number"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                          &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:50,631 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:50,632 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:50,647 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:50,679 [INFO  ] Log - >> Response message contains value Should contain 6 to 20 characters
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Length of account_number should be between 6 and 9 when bank_country_code is AU"&amp#27;[0m                         &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:50,704 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_number
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [Length of account_number should be between 6 and 9 when bank_country_code is AU] but found [Should contain 6 to 20 characters]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; AU when &quot;account_number&quot; er456tbg has invalid no. of characters 8&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](19)" classname="cucumber.Options.RunCucumberTests" time="1.633">
    <failure message="Cannot invoke &quot;Object.toString()&quot; because the return value of &quot;io.restassured.path.json.JsonPath.get(String)&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" AU when "account_number" er456tbg has invalid no. of characters 8 &amp#27;[90m# src/test/resources/features/Account_Number.feature:54&amp#27;[0m
2021-08-23 21:35:50,743 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:50,743 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" AU when "account_number" er456tbg has invalid no. of characters 8
2021-08-23 21:35:50,743 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:51,195 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                    &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:51,199 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:51,199 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "er456tbg",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "er456tbg",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"er456tbg"&amp#27;[0m                     &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:52,260 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:52,262 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "Lee Da Ming",
            "account_number": "er456tbg",
            "account_routing_type1": "bsb",
            "account_routing_value1": "083064",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "e5a5ef56-0a9e-4c83-befc-f54d0fac8561",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "Lee Da Ming",
                "account_number": "er456tbg",
                "account_routing_type1": "bsb",
                "account_routing_value1": "083064",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "e5a5ef56-0a9e-4c83-befc-f54d0fac8561",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                             &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:52,265 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:52,266 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mResponse &amp#27;[0m&amp#27;[31m&amp#27;[1m"code"&amp#27;[0m&amp#27;[31m has value &amp#27;[0m&amp#27;[31m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
	at utilities.Json_handler.getJsonPath(Json_handler.java:21)
	at stepDefinitions.Then_Steps.response_contains_value(Then_Steps.java:57)
	at âœ½.Response "code" has value "payment_schema_validation_failed"(file:///C:/SnehProjects/DemoProject/Demo_APIFramework/src/test/resources/features/Account_Number.feature:45)
&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"message"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"Length of account_number should be between 6 and 9 when bank_country_code is AU"&amp#27;[0m                            &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"source"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [400] but found [201],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; AU when &quot;account_number&quot; de444556677833224 has invalid no. of characters 17&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](20)" classname="cucumber.Options.RunCucumberTests" time="0.915">
    <failure message="Cannot invoke &quot;Object.toString()&quot; because the return value of &quot;io.restassured.path.json.JsonPath.get(String)&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" AU when "account_number" de444556677833224 has invalid no. of characters 17 &amp#27;[90m# src/test/resources/features/Account_Number.feature:55&amp#27;[0m
2021-08-23 21:35:52,301 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:52,302 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" AU when "account_number" de444556677833224 has invalid no. of characters 17
2021-08-23 21:35:52,302 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:52,781 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                              &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:52,782 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:52,782 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "de444556677833224",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "de444556677833224",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"de444556677833224"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:53,171 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:53,173 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "Lee Da Ming",
            "account_number": "de444556677833224",
            "account_routing_type1": "bsb",
            "account_routing_value1": "083064",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "4ee8a4cc-ab88-4276-9258-c1754cd606ac",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "Lee Da Ming",
                "account_number": "de444556677833224",
                "account_routing_type1": "bsb",
                "account_routing_value1": "083064",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "4ee8a4cc-ab88-4276-9258-c1754cd606ac",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                       &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:53,175 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:53,177 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mResponse &amp#27;[0m&amp#27;[31m&amp#27;[1m"code"&amp#27;[0m&amp#27;[31m has value &amp#27;[0m&amp#27;[31m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
	at utilities.Json_handler.getJsonPath(Json_handler.java:21)
	at stepDefinitions.Then_Steps.response_contains_value(Then_Steps.java:57)
	at âœ½.Response "code" has value "payment_schema_validation_failed"(file:///C:/SnehProjects/DemoProject/Demo_APIFramework/src/test/resources/features/Account_Number.feature:45)
&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"message"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"Length of account_number should be between 6 and 9 when bank_country_code is AU"&amp#27;[0m                                      &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"source"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [400] but found [201],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; AU when &quot;account_number&quot; de44455667783322412345 has invalid no. of characters 22&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](21)" classname="cucumber.Options.RunCucumberTests" time="0.928">
    <failure message="The following asserts failed:&#10;	expected [Length of account_number should be between 6 and 9 when bank_country_code is AU] but found [Should contain 6 to 20 characters]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [Length of account_number should be between 6 and 9 when bank_country_code is AU] but found [Should contain 6 to 20 characters]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" AU when "account_number" de44455667783322412345 has invalid no. of characters 22 &amp#27;[90m# src/test/resources/features/Account_Number.feature:56&amp#27;[0m
2021-08-23 21:35:53,241 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:53,243 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" AU when "account_number" de44455667783322412345 has invalid no. of characters 22
2021-08-23 21:35:53,243 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:53,708 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                   &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:53,710 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:53,710 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "de44455667783322412345",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "de44455667783322412345",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"de44455667783322412345"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:54,065 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:54,067 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain 6 to 20 characters",
    "source": "beneficiary.bank_details.account_number"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain 6 to 20 characters",
        "source": "beneficiary.bank_details.account_number"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                            &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:54,068 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:54,069 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:54,082 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:54,116 [INFO  ] Log - >> Response message contains value Should contain 6 to 20 characters
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Length of account_number should be between 6 and 9 when bank_country_code is AU"&amp#27;[0m                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:54,146 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_number
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [Length of account_number should be between 6 and 9 when bank_country_code is AU] but found [Should contain 6 to 20 characters]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; CN when &quot;account_number&quot; G has invalid no. of characters 1&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](22)" classname="cucumber.Options.RunCucumberTests" time="0.906">
    <failure message="The following asserts failed:&#10;	expected [Length of account_number should be between 8 and 20 when bank_country_code is CN] but found [Should contain 8 to 34 characters]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [Length of account_number should be between 8 and 20 when bank_country_code is CN] but found [Should contain 8 to 34 characters]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" CN when "account_number" G has invalid no. of characters 1 &amp#27;[90m# src/test/resources/features/Account_Number.feature:57&amp#27;[0m
2021-08-23 21:35:54,197 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:54,198 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" CN when "account_number" G has invalid no. of characters 1
2021-08-23 21:35:54,198 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:54,640 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                             &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:54,641 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:54,641 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "G",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "ICBKCNBJ",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "G",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "ICBKCNBJ",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"G"&amp#27;[0m                     &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:55,005 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:55,007 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain 8 to 34 characters",
    "source": "beneficiary.bank_details.account_number"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain 8 to 34 characters",
        "source": "beneficiary.bank_details.account_number"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                      &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:55,008 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:55,009 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:55,026 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:55,052 [INFO  ] Log - >> Response message contains value Should contain 8 to 34 characters
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Length of account_number should be between 8 and 20 when bank_country_code is CN"&amp#27;[0m                    &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:55,082 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_number
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [Length of account_number should be between 8 and 20 when bank_country_code is CN] but found [Should contain 8 to 34 characters]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; CN when &quot;account_number&quot; 123456 has invalid no. of characters 6&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](23)" classname="cucumber.Options.RunCucumberTests" time="0.985">
    <failure message="The following asserts failed:&#10;	expected [Length of account_number should be between 8 and 20 when bank_country_code is CN] but found [Should contain 8 to 34 characters]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [Length of account_number should be between 8 and 20 when bank_country_code is CN] but found [Should contain 8 to 34 characters]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" CN when "account_number" 123456 has invalid no. of characters 6 &amp#27;[90m# src/test/resources/features/Account_Number.feature:58&amp#27;[0m
2021-08-23 21:35:55,115 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:55,122 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" CN when "account_number" 123456 has invalid no. of characters 6
2021-08-23 21:35:55,124 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:55,595 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                  &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:55,597 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:55,597 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "123456",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "ICBKCNBJ",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "123456",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "ICBKCNBJ",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"123456"&amp#27;[0m                     &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:55,973 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:55,975 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain 8 to 34 characters",
    "source": "beneficiary.bank_details.account_number"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain 8 to 34 characters",
        "source": "beneficiary.bank_details.account_number"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                           &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:55,976 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:55,977 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                   &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:55,995 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:56,029 [INFO  ] Log - >> Response message contains value Should contain 8 to 34 characters
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Length of account_number should be between 8 and 20 when bank_country_code is CN"&amp#27;[0m                         &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:56,053 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_number
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                                                                   &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [Length of account_number should be between 8 and 20 when bank_country_code is CN] but found [Should contain 8 to 34 characters]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; CN when &quot;account_number&quot; 123456789qwertyui has invalid no. of characters 17&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](24)" classname="cucumber.Options.RunCucumberTests" time="1.68">
    <failure message="Cannot invoke &quot;Object.toString()&quot; because the return value of &quot;io.restassured.path.json.JsonPath.get(String)&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" CN when "account_number" 123456789qwertyui has invalid no. of characters 17 &amp#27;[90m# src/test/resources/features/Account_Number.feature:59&amp#27;[0m
2021-08-23 21:35:56,079 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:56,079 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" CN when "account_number" 123456789qwertyui has invalid no. of characters 17
2021-08-23 21:35:56,079 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:56,521 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                              &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:56,522 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:56,522 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "123456789qwertyui",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "ICBKCNBJ",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "123456789qwertyui",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "ICBKCNBJ",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"123456789qwertyui"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:57,708 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:57,709 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "CN",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "CAD",
            "account_name": "Lee Da Ming",
            "account_number": "123456789qwertyui",
            "account_routing_type1": "aba",
            "account_routing_value1": "083064",
            "bank_country_code": "CN",
            "bank_name": "National Canadian Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "ICBKCNBJ"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "53a725c9-6dc0-4692-99db-4817c9a9f18a",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "CN",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "CAD",
                "account_name": "Lee Da Ming",
                "account_number": "123456789qwertyui",
                "account_routing_type1": "aba",
                "account_routing_value1": "083064",
                "bank_country_code": "CN",
                "bank_name": "National Canadian Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "ICBKCNBJ"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "53a725c9-6dc0-4692-99db-4817c9a9f18a",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                       &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:57,712 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:57,712 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mResponse &amp#27;[0m&amp#27;[31m&amp#27;[1m"code"&amp#27;[0m&amp#27;[31m has value &amp#27;[0m&amp#27;[31m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
	at utilities.Json_handler.getJsonPath(Json_handler.java:21)
	at stepDefinitions.Then_Steps.response_contains_value(Then_Steps.java:57)
	at âœ½.Response "code" has value "payment_schema_validation_failed"(file:///C:/SnehProjects/DemoProject/Demo_APIFramework/src/test/resources/features/Account_Number.feature:45)
&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"message"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"Length of account_number should be between 8 and 20 when bank_country_code is CN"&amp#27;[0m                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"source"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [400] but found [201],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; CN when &quot;account_number&quot; ASEDRFTGYHUJIKOL1234123456789012345 has invalid no. of characters 35&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](25)" classname="cucumber.Options.RunCucumberTests" time="0.901">
    <failure message="The following asserts failed:&#10;	expected [Length of account_number should be between 8 and 20 when bank_country_code is CN] but found [Should contain 8 to 34 characters]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [Length of account_number should be between 8 and 20 when bank_country_code is CN] but found [Should contain 8 to 34 characters]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-AcctNumber @RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error response is returned for "bank_country_code" CN when "account_number" ASEDRFTGYHUJIKOL1234123456789012345 has invalid no. of characters 35 &amp#27;[90m# src/test/resources/features/Account_Number.feature:60&amp#27;[0m
2021-08-23 21:35:57,735 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:57,735 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" CN when "account_number" ASEDRFTGYHUJIKOL1234123456789012345 has invalid no. of characters 35
2021-08-23 21:35:57,735 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:58,164 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                                &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:58,166 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:58,167 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "ASEDRFTGYHUJIKOL1234123456789012345",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "ICBKCNBJ",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "ASEDRFTGYHUJIKOL1234123456789012345",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "ICBKCNBJ",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"ASEDRFTGYHUJIKOL1234123456789012345"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:58,580 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:58,586 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should contain 8 to 34 characters",
    "source": "beneficiary.bank_details.account_number"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should contain 8 to 34 characters",
        "source": "beneficiary.bank_details.account_number"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                         &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:58,588 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                          &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:58,589 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:35:58,614 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                          &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:58,640 [INFO  ] Log - >> Response message contains value Should contain 8 to 34 characters
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Length of account_number should be between 8 and 20 when bank_country_code is CN"&amp#27;[0m                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:58,663 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_number
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_number"&amp#27;[0m                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [Length of account_number should be between 8 and 20 when bank_country_code is CN] but found [Should contain 8 to 34 characters]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate beneficiary is sucessfully added when for &quot;bank_country_code&quot; &lt;Bank_country_code&gt; when &quot;account_number&quot; A has valid 1 characters&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](26)" classname="cucumber.Options.RunCucumberTests" time="0.949">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" A has valid 1 characters &amp#27;[90m# src/test/resources/features/Account_Number.feature:72&amp#27;[0m
2021-08-23 21:35:58,685 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:58,686 [INFO  ] Log - >> Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" A has valid 1 characters
2021-08-23 21:35:58,686 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:59,123 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:35:59,124 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:35:59,125 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "A",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "A",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"A"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:35:59,590 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:35:59,592 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "John Walker",
            "account_number": "A",
            "account_routing_type1": "aba",
            "account_routing_value1": "907765701",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "44c9f22e-d2e4-4b5d-98a2-648973cd22a7",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "John Walker",
                "account_number": "A",
                "account_routing_type1": "aba",
                "account_routing_value1": "907765701",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "44c9f22e-d2e4-4b5d-98a2-648973cd22a7",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                         &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:35:59,594 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                          &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:35:59,594 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate beneficiary is sucessfully added when for &quot;bank_country_code&quot; &lt;Bank_country_code&gt; when &quot;account_number&quot; 0 has valid 1 characters&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](27)" classname="cucumber.Options.RunCucumberTests" time="1.059">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" 0 has valid 1 characters &amp#27;[90m# src/test/resources/features/Account_Number.feature:73&amp#27;[0m
2021-08-23 21:35:59,610 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:35:59,611 [INFO  ] Log - >> Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" 0 has valid 1 characters
2021-08-23 21:35:59,611 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:00,229 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:00,230 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:00,230 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "0",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "0",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"0"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:00,612 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:00,614 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "John Walker",
            "account_number": "0",
            "account_routing_type1": "aba",
            "account_routing_value1": "907765701",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "9c4dc676-9e45-4ccc-b1ab-865baa0a93ea",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "John Walker",
                "account_number": "0",
                "account_routing_type1": "aba",
                "account_routing_value1": "907765701",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "9c4dc676-9e45-4ccc-b1ab-865baa0a93ea",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                         &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:00,626 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                          &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:00,627 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate beneficiary is sucessfully added when for &quot;bank_country_code&quot; &lt;Bank_country_code&gt; when &quot;account_number&quot; 123456789 has valid 9 characters&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](28)" classname="cucumber.Options.RunCucumberTests" time="1.597">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" 123456789 has valid 9 characters &amp#27;[90m# src/test/resources/features/Account_Number.feature:74&amp#27;[0m
2021-08-23 21:36:00,643 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:00,643 [INFO  ] Log - >> Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" 123456789 has valid 9 characters
2021-08-23 21:36:00,643 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:01,851 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:01,852 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:01,853 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "123456789",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "123456789",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"123456789"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:02,242 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:02,244 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "John Walker",
            "account_number": "123456789",
            "account_routing_type1": "aba",
            "account_routing_value1": "907765701",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "29788931-ac1c-46a2-a0cc-a87fe11dc186",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "John Walker",
                "account_number": "123456789",
                "account_routing_type1": "aba",
                "account_routing_value1": "907765701",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "29788931-ac1c-46a2-a0cc-a87fe11dc186",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                 &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:02,247 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:02,249 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate beneficiary is sucessfully added when for &quot;bank_country_code&quot; &lt;Bank_country_code&gt; when &quot;account_number&quot; MJIKHI has valid 6 characters&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](29)" classname="cucumber.Options.RunCucumberTests" time="0.885">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" MJIKHI has valid 6 characters &amp#27;[90m# src/test/resources/features/Account_Number.feature:75&amp#27;[0m
2021-08-23 21:36:02,265 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:02,266 [INFO  ] Log - >> Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" MJIKHI has valid 6 characters
2021-08-23 21:36:02,266 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:02,703 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                     &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:02,704 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:02,704 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "MJIKHI",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "MJIKHI",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"MJIKHI"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:03,134 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:03,136 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "Lee Da Ming",
            "account_number": "MJIKHI",
            "account_routing_type1": "bsb",
            "account_routing_value1": "083064",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "2ad6743e-ee64-48af-87fd-0561e390cd75",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "Lee Da Ming",
                "account_number": "MJIKHI",
                "account_routing_type1": "bsb",
                "account_routing_value1": "083064",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "2ad6743e-ee64-48af-87fd-0561e390cd75",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                              &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:03,138 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:03,139 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                          &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate beneficiary is sucessfully added when for &quot;bank_country_code&quot; &lt;Bank_country_code&gt; when &quot;account_number&quot; 987654321 has valid 9 characters&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](30)" classname="cucumber.Options.RunCucumberTests" time="0.854">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" 987654321 has valid 9 characters &amp#27;[90m# src/test/resources/features/Account_Number.feature:76&amp#27;[0m
2021-08-23 21:36:03,152 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:03,152 [INFO  ] Log - >> Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" 987654321 has valid 9 characters
2021-08-23 21:36:03,152 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:03,601 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:03,602 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:03,603 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "987654321",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "987654321",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"987654321"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:03,980 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:03,982 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "Lee Da Ming",
            "account_number": "987654321",
            "account_routing_type1": "bsb",
            "account_routing_value1": "083064",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "394af276-8dd9-4657-9196-5592c8cf4c30",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "Lee Da Ming",
                "account_number": "987654321",
                "account_routing_type1": "bsb",
                "account_routing_value1": "083064",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "394af276-8dd9-4657-9196-5592c8cf4c30",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                 &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:03,984 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:03,985 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate beneficiary is sucessfully added when for &quot;bank_country_code&quot; &lt;Bank_country_code&gt; when &quot;account_number&quot; GFhyi345 has valid 8 characters&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](31)" classname="cucumber.Options.RunCucumberTests" time="0.922">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" GFhyi345 has valid 8 characters &amp#27;[90m# src/test/resources/features/Account_Number.feature:77&amp#27;[0m
2021-08-23 21:36:04,002 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:04,003 [INFO  ] Log - >> Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" GFhyi345 has valid 8 characters
2021-08-23 21:36:04,003 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:04,509 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                       &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:04,510 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:04,510 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "GFhyi345",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "GFhyi345",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"GFhyi345"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:04,908 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:04,910 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "Lee Da Ming",
            "account_number": "GFhyi345",
            "account_routing_type1": "bsb",
            "account_routing_value1": "083064",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "5750ad06-ef8f-43ff-8122-578564cc0284",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "Lee Da Ming",
                "account_number": "GFhyi345",
                "account_routing_type1": "bsb",
                "account_routing_value1": "083064",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "5750ad06-ef8f-43ff-8122-578564cc0284",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:04,914 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:04,915 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate beneficiary is sucessfully added when for &quot;bank_country_code&quot; &lt;Bank_country_code&gt; when &quot;account_number&quot; GFh44445 has valid 8 characters&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](32)" classname="cucumber.Options.RunCucumberTests" time="0.982">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" GFh44445 has valid 8 characters &amp#27;[90m# src/test/resources/features/Account_Number.feature:78&amp#27;[0m
2021-08-23 21:36:04,930 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:04,931 [INFO  ] Log - >> Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" GFh44445 has valid 8 characters
2021-08-23 21:36:04,931 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:05,434 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                       &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:05,435 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:05,436 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "GFh44445",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "ICBKCNBJ",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "GFh44445",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "ICBKCNBJ",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"GFh44445"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:05,824 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:05,825 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "CN",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "CAD",
            "account_name": "Lee Da Ming",
            "account_number": "GFh44445",
            "account_routing_type1": "aba",
            "account_routing_value1": "083064",
            "bank_country_code": "CN",
            "bank_name": "National Canadian Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "ICBKCNBJ"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "b42c06ac-d2c3-4cdd-8f46-dc68eed59e51",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "CN",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "CAD",
                "account_name": "Lee Da Ming",
                "account_number": "GFh44445",
                "account_routing_type1": "aba",
                "account_routing_value1": "083064",
                "bank_country_code": "CN",
                "bank_name": "National Canadian Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "ICBKCNBJ"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "b42c06ac-d2c3-4cdd-8f46-dc68eed59e51",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:05,829 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:05,830 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate beneficiary is sucessfully added when for &quot;bank_country_code&quot; &lt;Bank_country_code&gt; when &quot;account_number&quot; 123456789DERftguhijo has valid 20 characters&quot;, &quot;Optional[Validates Account_Number in Bank_details]&quot;](33)" classname="cucumber.Options.RunCucumberTests" time="0.891">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" 123456789DERftguhijo has valid 20 characters &amp#27;[90m# src/test/resources/features/Account_Number.feature:79&amp#27;[0m
2021-08-23 21:36:05,843 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:05,843 [INFO  ] Log - >> Validate beneficiary is sucessfully added when for "bank_country_code" <Bank_country_code> when "account_number" 123456789DERftguhijo has valid 20 characters
2021-08-23 21:36:05,843 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:06,350 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                                    &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:06,351 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:06,352 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "123456789DERftguhijo",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "ICBKCNBJ",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "123456789DERftguhijo",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "ICBKCNBJ",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_number"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"123456789DERftguhijo"&amp#27;[0m                                         &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:06,742 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:06,745 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "CN",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "CAD",
            "account_name": "Lee Da Ming",
            "account_number": "123456789DERftguhijo",
            "account_routing_type1": "aba",
            "account_routing_value1": "083064",
            "bank_country_code": "CN",
            "bank_name": "National Canadian Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "ICBKCNBJ"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "768db413-f682-4664-91e5-55e2b9492984",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "CN",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "CAD",
                "account_name": "Lee Da Ming",
                "account_number": "123456789DERftguhijo",
                "account_routing_type1": "aba",
                "account_routing_value1": "083064",
                "bank_country_code": "CN",
                "bank_name": "National Canadian Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "ICBKCNBJ"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "768db413-f682-4664-91e5-55e2b9492984",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                             &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:06,747 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:06,747 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is not added when Bank_Country_Code key is missing&quot;, &quot;Optional[Validates bank_country_code in BankDetails]&quot;](34)" classname="cucumber.Options.RunCucumberTests" time="1.686">
    <system-out><![CDATA[
@SchemaValidation
Scenario: Validates beneficiary is not added when Bank_Country_Code key is missing      &amp#27;[90m# src/test/resources/features/Bank_CountryCode.feature:9&amp#27;[0m
2021-08-23 21:36:06,759 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:06,761 [INFO  ] Log - >> Validates beneficiary is not added when Bank_Country_Code key is missing
2021-08-23 21:36:06,762 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:07,988 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                            &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:07,989 [INFO  ] Log - >> Request PayLoad Created with all keys, except without  bank_country_code
2021-08-23 21:36:07,989 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys without &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_without_bank_country_code(java.lang.String)&amp#27;[0m
2021-08-23 21:36:08,381 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:08,383 [INFO  ] Log - >> 
Response : {
    "code": "field_required",
    "message": "must not be null",
    "source": "beneficiary.bank_details.bank_country_code"
}

    Response : {
        "code": "field_required",
        "message": "must not be null",
        "source": "beneficiary.bank_details.bank_country_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                     &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:08,384 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                      &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:08,384 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:08,399 [INFO  ] Log - >> Response code contains value field_required
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"field_required"&amp#27;[0m                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:08,444 [INFO  ] Log - >> Response message contains value must not be null
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"must not be null"&amp#27;[0m                                   &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:08,473 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.bank_country_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.bank_country_code"&amp#27;[0m          &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is not added when Bank_Country_Code value is Empty&quot;, &quot;Optional[Validates bank_country_code in BankDetails]&quot;](35)" classname="cucumber.Options.RunCucumberTests" time="1.027">
    <system-out><![CDATA[
@SchemaValidation
Scenario: Validates beneficiary is not added when Bank_Country_Code value is Empty              &amp#27;[90m# src/test/resources/features/Bank_CountryCode.feature:19&amp#27;[0m
2021-08-23 21:36:08,506 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:08,507 [INFO  ] Log - >> Validates beneficiary is not added when Bank_Country_Code value is Empty
2021-08-23 21:36:08,507 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:09,010 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                    &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:09,011 [INFO  ] Log - >> Request PayLoad Created with all keys, with bank_country_code value is Empty
2021-08-23 21:36:09,012 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Empty"&amp#27;[0m &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:09,419 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:09,420 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": " is not a valid type",
    "source": "beneficiary.bank_details.bank_country_code"
}

    Response : {
        "code": "invalid_argument",
        "message": " is not a valid type",
        "source": "beneficiary.bank_details.bank_country_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                             &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:09,421 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:09,422 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:09,438 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:09,469 [INFO  ] Log - >> Response message contains value  is not a valid type
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m" is not a valid type"&amp#27;[0m                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:09,516 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.bank_country_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.bank_country_code"&amp#27;[0m                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is added when Bank_Country_Code is valid but in small case us&quot;, &quot;Optional[Validates bank_country_code in BankDetails]&quot;](36)" classname="cucumber.Options.RunCucumberTests" time="0.938">
    <system-out><![CDATA[
Scenario Outline: Validates beneficiary is added when Bank_Country_Code is valid but in small case us &amp#27;[90m# src/test/resources/features/Bank_CountryCode.feature:39&amp#27;[0m
2021-08-23 21:36:09,536 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:09,537 [INFO  ] Log - >> Validates beneficiary is added when Bank_Country_Code is valid but in small case us
2021-08-23 21:36:09,537 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:10,046 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                          &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:10,047 [INFO  ] Log - >> Request PayLoad Created with all keys, with bank_country_code value is us
2021-08-23 21:36:10,047 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "us",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "us",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"us"&amp#27;[0m          &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:10,384 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:10,385 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": "us is not a valid type",
    "source": "beneficiary.bank_details.bank_country_code"
}

    Response : {
        "code": "invalid_argument",
        "message": "us is not a valid type",
        "source": "beneficiary.bank_details.bank_country_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                   &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:10,386 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:10,387 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:10,401 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:10,427 [INFO  ] Log - >> Response message contains value us is not a valid type
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"us is not a valid type"&amp#27;[0m                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:10,457 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.bank_country_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.bank_country_code"&amp#27;[0m                        &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is added when Bank_Country_Code is valid but in small case cn&quot;, &quot;Optional[Validates bank_country_code in BankDetails]&quot;](37)" classname="cucumber.Options.RunCucumberTests" time="0.898">
    <system-out><![CDATA[
Scenario Outline: Validates beneficiary is added when Bank_Country_Code is valid but in small case cn &amp#27;[90m# src/test/resources/features/Bank_CountryCode.feature:40&amp#27;[0m
2021-08-23 21:36:10,481 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:10,481 [INFO  ] Log - >> Validates beneficiary is added when Bank_Country_Code is valid but in small case cn
2021-08-23 21:36:10,482 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:10,918 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                          &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:10,919 [INFO  ] Log - >> Request PayLoad Created with all keys, with bank_country_code value is cn
2021-08-23 21:36:10,919 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "cn",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "cn",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"cn"&amp#27;[0m          &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:11,271 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:11,272 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": "cn is not a valid type",
    "source": "beneficiary.bank_details.bank_country_code"
}

    Response : {
        "code": "invalid_argument",
        "message": "cn is not a valid type",
        "source": "beneficiary.bank_details.bank_country_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                   &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:11,273 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:11,274 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:11,286 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:11,313 [INFO  ] Log - >> Response message contains value cn is not a valid type
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"cn is not a valid type"&amp#27;[0m                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:11,339 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.bank_country_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.bank_country_code"&amp#27;[0m                        &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is not added when Bank_Country_Code does not follow &apos;ISO 3166-2&apos; standard&quot;, &quot;Optional[Validates bank_country_code in BankDetails]&quot;](38)" classname="cucumber.Options.RunCucumberTests" time="0.885">
    <system-out><![CDATA[
Scenario Outline: Validates beneficiary is not added when Bank_Country_Code does not follow 'ISO 3166-2' standard &amp#27;[90m# src/test/resources/features/Bank_CountryCode.feature:53&amp#27;[0m
2021-08-23 21:36:11,362 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:11,362 [INFO  ] Log - >> Validates beneficiary is not added when Bank_Country_Code does not follow 'ISO 3166-2' standard
2021-08-23 21:36:11,362 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:11,817 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                      &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:11,817 [INFO  ] Log - >> Request PayLoad Created with all keys, with bank_country_code value is UP
2021-08-23 21:36:11,818 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "UP",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "UP",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"UP"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:12,169 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:12,170 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": "UP is not a valid type",
    "source": "beneficiary.bank_details.bank_country_code"
}

    Response : {
        "code": "invalid_argument",
        "message": "UP is not a valid type",
        "source": "beneficiary.bank_details.bank_country_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                               &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:12,170 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:12,171 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:12,182 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:12,204 [INFO  ] Log - >> Response message contains value UP is not a valid type
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"UP is not a valid type"&amp#27;[0m                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:12,228 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.bank_country_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.bank_country_code"&amp#27;[0m                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is not added when Bank_Country_Code does not follow &apos;ISO 3166-2&apos; standard&quot;, &quot;Optional[Validates bank_country_code in BankDetails]&quot;](39)" classname="cucumber.Options.RunCucumberTests" time="0.838">
    <system-out><![CDATA[
Scenario Outline: Validates beneficiary is not added when Bank_Country_Code does not follow 'ISO 3166-2' standard &amp#27;[90m# src/test/resources/features/Bank_CountryCode.feature:54&amp#27;[0m
2021-08-23 21:36:12,251 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:12,252 [INFO  ] Log - >> Validates beneficiary is not added when Bank_Country_Code does not follow 'ISO 3166-2' standard
2021-08-23 21:36:12,252 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:12,695 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                      &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:12,696 [INFO  ] Log - >> Request PayLoad Created with all keys, with bank_country_code value is XT
2021-08-23 21:36:12,696 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "XT",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "XT",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"XT"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:13,046 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:13,046 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": "XT is not a valid type",
    "source": "beneficiary.bank_details.bank_country_code"
}

    Response : {
        "code": "invalid_argument",
        "message": "XT is not a valid type",
        "source": "beneficiary.bank_details.bank_country_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                               &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:13,047 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:13,047 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:13,056 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:13,071 [INFO  ] Log - >> Response message contains value XT is not a valid type
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"XT is not a valid type"&amp#27;[0m                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:13,090 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.bank_country_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.bank_country_code"&amp#27;[0m                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is not added when Bank_Country_Code as per &apos;ISO 3166-2&apos; standard but invalid for Airwallex&quot;, &quot;Optional[Validates bank_country_code in BankDetails]&quot;](40)" classname="cucumber.Options.RunCucumberTests" time="0.992">
    <system-out><![CDATA[
Scenario Outline: Validates beneficiary is not added when Bank_Country_Code as per 'ISO 3166-2' standard but invalid for Airwallex                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            &amp#27;[90m# src/test/resources/features/Bank_CountryCode.feature:67&amp#27;[0m
2021-08-23 21:36:13,106 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:13,106 [INFO  ] Log - >> Validates beneficiary is not added when Bank_Country_Code as per 'ISO 3166-2' standard but invalid for Airwallex
2021-08-23 21:36:13,106 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:13,621 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:13,622 [INFO  ] Log - >> Request PayLoad Created with all keys, with bank_country_code value is AX
2021-08-23 21:36:13,622 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "AX",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "AX",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AX"&amp#27;[0mamp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:14,020 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:14,022 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should be one of the following: [AD, AE, AG, AI, AL, AM, AN, AO, AR, AT, AU, AW, AZ, BA, BD, BE, BG, BH, BO, BR, BZ, CA, CH, CL, CN, CO, CR, CW, CY, CZ, DE, DK, DM, DO, DZ, EC, EE, EG, ES, FI, FJ, FR, GB, GD, GE, GG, GI, GQ, GR, GT, GY, HK, HN, HR, HU, ID, IE, IL, IM, IN, IS, IT, JE, JM, JO, JP, KE, KG, KH, KR, KZ, KW, LI, LK, LT, LU, LV, MA, MC, MD, ME, MK, MO, MQ, MT, MU, MV, MX, MY, NA, NG, NL, NO, NP, NZ, OM, PA, PE, PF, PH, PK, PL, PM, PR, PT, PY, QA, RO, RS, RU, SA, SC, SE, SG, SI, SK, SM, SV, TH, TJ, TN, TR, TZ, TW, UA, UG, US, UY, UZ, VN, VU, YT, ZA, ZM]",
    "source": "beneficiary.bank_details.bank_country_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should be one of the following: [AD, AE, AG, AI, AL, AM, AN, AO, AR, AT, AU, AW, AZ, BA, BD, BE, BG, BH, BO, BR, BZ, CA, CH, CL, CN, CO, CR, CW, CY, CZ, DE, DK, DM, DO, DZ, EC, EE, EG, ES, FI, FJ, FR, GB, GD, GE, GG, GI, GQ, GR, GT, GY, HK, HN, HR, HU, ID, IE, IL, IM, IN, IS, IT, JE, JM, JO, JP, KE, KG, KH, KR, KZ, KW, LI, LK, LT, LU, LV, MA, MC, MD, ME, MK, MO, MQ, MT, MU, MV, MX, MY, NA, NG, NL, NO, NP, NZ, OM, PA, PE, PF, PH, PK, PL, PM, PR, PT, PY, QA, RO, RS, RU, SA, SC, SE, SG, SI, SK, SM, SV, TH, TJ, TN, TR, TZ, TW, UA, UG, US, UY, UZ, VN, VU, YT, ZA, ZM]",
        "source": "beneficiary.bank_details.bank_country_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0mamp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:14,023 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0mamp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:14,024 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0mamp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:14,041 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0mamp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:14,066 [INFO  ] Log - >> Response message contains value Should be one of the following: [AD, AE, AG, AI, AL, AM, AN, AO, AR, AT, AU, AW, AZ, BA, BD, BE, BG, BH, BO, BR, BZ, CA, CH, CL, CN, CO, CR, CW, CY, CZ, DE, DK, DM, DO, DZ, EC, EE, EG, ES, FI, FJ, FR, GB, GD, GE, GG, GI, GQ, GR, GT, GY, HK, HN, HR, HU, ID, IE, IL, IM, IN, IS, IT, JE, JM, JO, JP, KE, KG, KH, KR, KZ, KW, LI, LK, LT, LU, LV, MA, MC, MD, ME, MK, MO, MQ, MT, MU, MV, MX, MY, NA, NG, NL, NO, NP, NZ, OM, PA, PE, PF, PH, PK, PL, PM, PR, PT, PY, QA, RO, RS, RU, SA, SC, SE, SG, SI, SK, SM, SV, TH, TJ, TN, TR, TZ, TW, UA, UG, US, UY, UZ, VN, VU, YT, ZA, ZM]
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Should be one of the following: [AD, AE, AG, AI, AL, AM, AN, AO, AR, AT, AU, AW, AZ, BA, BD, BE, BG, BH, BO, BR, BZ, CA, CH, CL, CN, CO, CR, CW, CY, CZ, DE, DK, DM, DO, DZ, EC, EE, EG, ES, FI, FJ, FR, GB, GD, GE, GG, GI, GQ, GR, GT, GY, HK, HN, HR, HU, ID, IE, IL, IM, IN, IS, IT, JE, JM, JO, JP, KE, KG, KH, KR, KZ, KW, LI, LK, LT, LU, LV, MA, MC, MD, ME, MK, MO, MQ, MT, MU, MV, MX, MY, NA, NG, NL, NO, NP, NZ, OM, PA, PE, PF, PH, PK, PL, PM, PR, PT, PY, QA, RO, RS, RU, SA, SC, SE, SG, SI, SK, SM, SV, TH, TJ, TN, TR, TZ, TW, UA, UG, US, UY, UZ, VN, VU, YT, ZA, ZM]"&amp#27;[0m &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:14,091 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.bank_country_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.bank_country_code"&amp#27;[0mamp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is not added when Bank_Country_Code as per &apos;ISO 3166-2&apos; standard but invalid for Airwallex&quot;, &quot;Optional[Validates bank_country_code in BankDetails]&quot;](41)" classname="cucumber.Options.RunCucumberTests" time="1.088">
    <system-out><![CDATA[
Scenario Outline: Validates beneficiary is not added when Bank_Country_Code as per 'ISO 3166-2' standard but invalid for Airwallex                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            &amp#27;[90m# src/test/resources/features/Bank_CountryCode.feature:68&amp#27;[0m
2021-08-23 21:36:14,110 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:14,110 [INFO  ] Log - >> Validates beneficiary is not added when Bank_Country_Code as per 'ISO 3166-2' standard but invalid for Airwallex
2021-08-23 21:36:14,110 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:14,641 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0mamp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:14,642 [INFO  ] Log - >> Request PayLoad Created with all keys, with bank_country_code value is CC
2021-08-23 21:36:14,643 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "CC",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "CC",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CC"&amp#27;[0mamp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:15,021 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:15,024 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should be one of the following: [AD, AE, AG, AI, AL, AM, AN, AO, AR, AT, AU, AW, AZ, BA, BD, BE, BG, BH, BO, BR, BZ, CA, CH, CL, CN, CO, CR, CW, CY, CZ, DE, DK, DM, DO, DZ, EC, EE, EG, ES, FI, FJ, FR, GB, GD, GE, GG, GI, GQ, GR, GT, GY, HK, HN, HR, HU, ID, IE, IL, IM, IN, IS, IT, JE, JM, JO, JP, KE, KG, KH, KR, KZ, KW, LI, LK, LT, LU, LV, MA, MC, MD, ME, MK, MO, MQ, MT, MU, MV, MX, MY, NA, NG, NL, NO, NP, NZ, OM, PA, PE, PF, PH, PK, PL, PM, PR, PT, PY, QA, RO, RS, RU, SA, SC, SE, SG, SI, SK, SM, SV, TH, TJ, TN, TR, TZ, TW, UA, UG, US, UY, UZ, VN, VU, YT, ZA, ZM]",
    "source": "beneficiary.bank_details.bank_country_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should be one of the following: [AD, AE, AG, AI, AL, AM, AN, AO, AR, AT, AU, AW, AZ, BA, BD, BE, BG, BH, BO, BR, BZ, CA, CH, CL, CN, CO, CR, CW, CY, CZ, DE, DK, DM, DO, DZ, EC, EE, EG, ES, FI, FJ, FR, GB, GD, GE, GG, GI, GQ, GR, GT, GY, HK, HN, HR, HU, ID, IE, IL, IM, IN, IS, IT, JE, JM, JO, JP, KE, KG, KH, KR, KZ, KW, LI, LK, LT, LU, LV, MA, MC, MD, ME, MK, MO, MQ, MT, MU, MV, MX, MY, NA, NG, NL, NO, NP, NZ, OM, PA, PE, PF, PH, PK, PL, PM, PR, PT, PY, QA, RO, RS, RU, SA, SC, SE, SG, SI, SK, SM, SV, TH, TJ, TN, TR, TZ, TW, UA, UG, US, UY, UZ, VN, VU, YT, ZA, ZM]",
        "source": "beneficiary.bank_details.bank_country_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0mamp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:15,025 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0mamp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:15,025 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0mamp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:15,041 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0mamp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:15,075 [INFO  ] Log - >> Response message contains value Should be one of the following: [AD, AE, AG, AI, AL, AM, AN, AO, AR, AT, AU, AW, AZ, BA, BD, BE, BG, BH, BO, BR, BZ, CA, CH, CL, CN, CO, CR, CW, CY, CZ, DE, DK, DM, DO, DZ, EC, EE, EG, ES, FI, FJ, FR, GB, GD, GE, GG, GI, GQ, GR, GT, GY, HK, HN, HR, HU, ID, IE, IL, IM, IN, IS, IT, JE, JM, JO, JP, KE, KG, KH, KR, KZ, KW, LI, LK, LT, LU, LV, MA, MC, MD, ME, MK, MO, MQ, MT, MU, MV, MX, MY, NA, NG, NL, NO, NP, NZ, OM, PA, PE, PF, PH, PK, PL, PM, PR, PT, PY, QA, RO, RS, RU, SA, SC, SE, SG, SI, SK, SM, SV, TH, TJ, TN, TR, TZ, TW, UA, UG, US, UY, UZ, VN, VU, YT, ZA, ZM]
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Should be one of the following: [AD, AE, AG, AI, AL, AM, AN, AO, AR, AT, AU, AW, AZ, BA, BD, BE, BG, BH, BO, BR, BZ, CA, CH, CL, CN, CO, CR, CW, CY, CZ, DE, DK, DM, DO, DZ, EC, EE, EG, ES, FI, FJ, FR, GB, GD, GE, GG, GI, GQ, GR, GT, GY, HK, HN, HR, HU, ID, IE, IL, IM, IN, IS, IT, JE, JM, JO, JP, KE, KG, KH, KR, KZ, KW, LI, LK, LT, LU, LV, MA, MC, MD, ME, MK, MO, MQ, MT, MU, MV, MX, MY, NA, NG, NL, NO, NP, NZ, OM, PA, PE, PF, PH, PK, PL, PM, PR, PT, PY, QA, RO, RS, RU, SA, SC, SE, SG, SI, SK, SM, SV, TH, TJ, TN, TR, TZ, TW, UA, UG, US, UY, UZ, VN, VU, YT, ZA, ZM]"&amp#27;[0m &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:15,125 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.bank_country_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.bank_country_code"&amp#27;[0mamp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is added when Bank_Country_Code is valid but in small case US&quot;, &quot;Optional[Validates bank_country_code in BankDetails]&quot;](42)" classname="cucumber.Options.RunCucumberTests" time="0.904">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validates beneficiary is added when Bank_Country_Code is valid but in small case US               &amp#27;[90m# src/test/resources/features/Bank_CountryCode.feature:79&amp#27;[0m
2021-08-23 21:36:15,152 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:15,152 [INFO  ] Log - >> Validates beneficiary is added when Bank_Country_Code is valid but in small case US
2021-08-23 21:36:15,152 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:15,683 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:15,683 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:15,683 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"country code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:16,061 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:16,061 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "John Walker",
            "account_number": "502231121",
            "account_routing_type1": "aba",
            "account_routing_value1": "907765701",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "e6d24abc-5785-457e-b70c-b548d1a823ac",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "John Walker",
                "account_number": "502231121",
                "account_routing_type1": "aba",
                "account_routing_value1": "907765701",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "e6d24abc-5785-457e-b70c-b548d1a823ac",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                 &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:16,063 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:16,063 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates beneficiary is added when Bank_Country_Code is valid but in small case AU&quot;, &quot;Optional[Validates bank_country_code in BankDetails]&quot;](43)" classname="cucumber.Options.RunCucumberTests" time="1.031">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validates beneficiary is added when Bank_Country_Code is valid but in small case AU               &amp#27;[90m# src/test/resources/features/Bank_CountryCode.feature:80&amp#27;[0m
2021-08-23 21:36:16,071 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:16,072 [INFO  ] Log - >> Validates beneficiary is added when Bank_Country_Code is valid but in small case AU
2021-08-23 21:36:16,072 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:16,585 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:16,587 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:16,587 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"country code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:16,984 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:16,986 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "Lee Da Ming",
            "account_number": "12750852",
            "account_routing_type1": "bsb",
            "account_routing_value1": "083064",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "07639761-d58e-4bd4-9f96-e90547c1e2a4",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "Lee Da Ming",
                "account_number": "12750852",
                "account_routing_type1": "bsb",
                "account_routing_value1": "083064",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "07639761-d58e-4bd4-9f96-e90547c1e2a4",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                 &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:16,988 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:16,989 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates error response is received when Payload field payment_method is missing&quot;, &quot;Optional[Validates Payment_Method in BankDetails]&quot;](44)" classname="cucumber.Options.RunCucumberTests" time="0.726">
    <system-out><![CDATA[
@SchemaValidation
Scenario: Validates error response is received when Payload field payment_method is missing &amp#27;[90m# src/test/resources/features/Payment_method.feature:7&amp#27;[0m
2021-08-23 21:36:17,003 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:17,003 [INFO  ] Log - >> Validates error response is received when Payload field payment_method is missing
2021-08-23 21:36:17,004 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:17,419 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:17,420 [INFO  ] Log - >> Request PayLoad Created with all keys, except without payment_methods key
2021-08-23 21:36:17,420 [INFO  ] Log - >> 
Request Payload : {
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys without &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_methods"&amp#27;[0m       &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_without_bank_country_code(java.lang.String)&amp#27;[0m
2021-08-23 21:36:17,802 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:17,803 [INFO  ] Log - >> 
Response : {
    "code": "field_required",
    "message": "must not be null",
    "source": "payment_methods"
}

    Response : {
        "code": "field_required",
        "message": "must not be null",
        "source": "payment_methods"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                         &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:17,805 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                          &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:17,806 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates error response is received when Payload field payment_method value is Empty&quot;, &quot;Optional[Validates Payment_Method in BankDetails]&quot;](45)" classname="cucumber.Options.RunCucumberTests" time="0.894">
    <system-out><![CDATA[
@SchemaValidation
Scenario: Validates error response is received when Payload field payment_method value is Empty               &amp#27;[90m# src/test/resources/features/Payment_method.feature:14&amp#27;[0m
2021-08-23 21:36:17,821 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:17,821 [INFO  ] Log - >> Validates error response is received when Payload field payment_method value is Empty
2021-08-23 21:36:17,821 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:18,251 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                  &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:18,252 [INFO  ] Log - >> Request PayLoad Created with all keys, with payment_methods value is Empty
2021-08-23 21:36:18,252 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": [""],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": [""],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_methods"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Empty"&amp#27;[0m                 &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:18,576 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:18,577 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": "No enum constant com.airwallex.domain.transaction.payment.PaymentMethod.",
    "source": "payment_methods"
}

    Response : {
        "code": "invalid_argument",
        "message": "No enum constant com.airwallex.domain.transaction.payment.PaymentMethod.",
        "source": "payment_methods"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                           &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:18,578 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:18,579 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                   &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:18,594 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:18,631 [INFO  ] Log - >> Response message contains value No enum constant com.airwallex.domain.transaction.payment.PaymentMethod.
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"No enum constant com.airwallex.domain.transaction.payment.PaymentMethod."&amp#27;[0m &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:18,684 [INFO  ] Log - >> Response source contains value payment_methods
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_methods"&amp#27;[0m                                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates error response is received when Payload field payment_method value is not valid TARGET&quot;, &quot;Optional[Validates Payment_Method in BankDetails]&quot;](46)" classname="cucumber.Options.RunCucumberTests" time="0.807">
    <system-out><![CDATA[
Scenario: Validates error response is received when Payload field payment_method value is not valid TARGET          &amp#27;[90m# src/test/resources/features/Payment_method.feature:34&amp#27;[0m
2021-08-23 21:36:18,722 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:18,723 [INFO  ] Log - >> Validates error response is received when Payload field payment_method value is not valid TARGET
2021-08-23 21:36:18,723 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:19,139 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:19,140 [INFO  ] Log - >> Request PayLoad Created with all keys, with payment_methods value is Empty
2021-08-23 21:36:19,140 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["TARGET"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["TARGET"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_methods"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"TARGET"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:19,479 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:19,480 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": "No enum constant com.airwallex.domain.transaction.payment.PaymentMethod.TARGET",
    "source": "payment_methods"
}

    Response : {
        "code": "invalid_argument",
        "message": "No enum constant com.airwallex.domain.transaction.payment.PaymentMethod.TARGET",
        "source": "payment_methods"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                 &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:19,480 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:19,480 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:19,492 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:19,511 [INFO  ] Log - >> Response message contains value No enum constant com.airwallex.domain.transaction.payment.PaymentMethod.TARGET
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"No enum constant com.airwallex.domain.transaction.payment.PaymentMethod.TARGET"&amp#27;[0m &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:19,531 [INFO  ] Log - >> Response source contains value payment_methods
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_methods"&amp#27;[0m                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates error response is received when Payload field payment_method value is not valid SEPA&quot;, &quot;Optional[Validates Payment_Method in BankDetails]&quot;](47)" classname="cucumber.Options.RunCucumberTests" time="1.117">
    <system-out><![CDATA[
Scenario: Validates error response is received when Payload field payment_method value is not valid SEPA          &amp#27;[90m# src/test/resources/features/Payment_method.feature:35&amp#27;[0m
2021-08-23 21:36:19,552 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:19,553 [INFO  ] Log - >> Validates error response is received when Payload field payment_method value is not valid SEPA
2021-08-23 21:36:19,553 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:19,968 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                      &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:19,969 [INFO  ] Log - >> Request PayLoad Created with all keys, with payment_methods value is Empty
2021-08-23 21:36:19,970 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SEPA"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SEPA"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_methods"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"SEPA"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:20,417 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:20,418 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": "No enum constant com.airwallex.domain.transaction.payment.PaymentMethod.SEPA",
    "source": "payment_methods"
}

    Response : {
        "code": "invalid_argument",
        "message": "No enum constant com.airwallex.domain.transaction.payment.PaymentMethod.SEPA",
        "source": "payment_methods"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                               &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:20,419 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:20,420 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:20,429 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:20,468 [INFO  ] Log - >> Response message contains value No enum constant com.airwallex.domain.transaction.payment.PaymentMethod.SEPA
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"No enum constant com.airwallex.domain.transaction.payment.PaymentMethod.SEPA"&amp#27;[0m &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:20,495 [INFO  ] Log - >> Response source contains value payment_methods
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_methods"&amp#27;[0m                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates correct response is received when Payload field payment_method value is valid SWIFT&quot;, &quot;Optional[Validates Payment_Method in BankDetails]&quot;](48)" classname="cucumber.Options.RunCucumberTests" time="0.696">
    <system-out><![CDATA[
@PositiveScenarios
Scenario: Validates correct response is received when Payload field payment_method value is valid SWIFT &amp#27;[90m# src/test/resources/features/Payment_method.feature:46&amp#27;[0m
2021-08-23 21:36:20,518 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:20,519 [INFO  ] Log - >> Validates correct response is received when Payload field payment_method value is valid SWIFT
2021-08-23 21:36:20,520 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:20,959 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                            &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:20,959 [INFO  ] Log - >> Request PayLoad Created with all keys, with payment_methods value is Empty
2021-08-23 21:36:20,959 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_methods"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"SWIFT"&amp#27;[0m           &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:21,340 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:21,340 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "John Walker",
            "account_number": "502231121",
            "account_routing_type1": "aba",
            "account_routing_value1": "907765701",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "43b13bfe-0556-4517-9580-e38fd98dd6af",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "John Walker",
                "account_number": "502231121",
                "account_routing_type1": "aba",
                "account_routing_value1": "907765701",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "43b13bfe-0556-4517-9580-e38fd98dd6af",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                     &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:21,342 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                      &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:21,342 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates error response is received when Payload field account_routing_type1 is missing&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](49)" classname="cucumber.Options.RunCucumberTests" time="0.83">
    <failure message="The following asserts failed:&#10;	expected [400] but found [201],&#10;	expected [true] but found [false]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [400] but found [201],
	expected [true] but found [false]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-RequiredField @SchemaValidation
Scenario: Validates error response is received when Payload field account_routing_type1 is missing &amp#27;[90m# src/test/resources/features/Routing_Type.feature:7&amp#27;[0m
2021-08-23 21:36:21,351 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:21,351 [INFO  ] Log - >> Validates error response is received when Payload field account_routing_type1 is missing
2021-08-23 21:36:21,351 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:21,784 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                       &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:21,784 [INFO  ] Log - >> Request PayLoad Created with all keys, except without  account_routing_type1
2021-08-23 21:36:21,784 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys without &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_without_bank_country_code(java.lang.String)&amp#27;[0m
2021-08-23 21:36:22,123 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:22,124 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "John Walker",
            "account_number": "502231121",
            "account_routing_value1": "907765701",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "40f39785-679c-41aa-84e5-2bfc325e08c4",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "John Walker",
                "account_number": "502231121",
                "account_routing_value1": "907765701",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "40f39785-679c-41aa-84e5-2bfc325e08c4",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:22,125 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:22,126 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [400] but found [201],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates error response is received when Payload feild payment_method value is Empty&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](50)" classname="cucumber.Options.RunCucumberTests" time="0.762">
    <system-out><![CDATA[
@SchemaValidation
Scenario: Validates error response is received when Payload feild payment_method value is Empty     &amp#27;[90m# src/test/resources/features/Routing_Type.feature:14&amp#27;[0m
2021-08-23 21:36:22,134 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:22,134 [INFO  ] Log - >> Validates error response is received when Payload feild payment_method value is Empty
2021-08-23 21:36:22,135 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:22,539 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:22,539 [INFO  ] Log - >> Request PayLoad Created with all keys, with account_routing_type1 value is Empty
2021-08-23 21:36:22,540 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": ""
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": ""
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Empty"&amp#27;[0m &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:22,878 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:22,879 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": " is not a valid type",
    "source": "beneficiary.bank_details.account_routing_type1"
}

    Response : {
        "code": "invalid_argument",
        "message": " is not a valid type",
        "source": "beneficiary.bank_details.account_routing_type1"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                 &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:22,880 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:22,880 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:22,888 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:22,903 [INFO  ] Log - >> Response message contains value  is not a valid type
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m" is not a valid type"&amp#27;[0m                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:22,918 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_routing_type1
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_routing_type1"&amp#27;[0m                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; US when &quot;account_routing_type1&quot; aab has invalid characters &lt;number_of_characters&gt;&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](51)" classname="cucumber.Options.RunCucumberTests" time="1.72">
    <system-out><![CDATA[
Scenario Outline: Validate error response is returned for "bank_country_code" US when "account_routing_type1" aab has invalid characters <number_of_characters> &amp#27;[90m# src/test/resources/features/Routing_Type.feature:34&amp#27;[0m
2021-08-23 21:36:22,932 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:22,932 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" US when "account_routing_type1" aab has invalid characters <number_of_characters>
2021-08-23 21:36:22,932 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:23,444 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                    &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:23,445 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:23,445 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aab"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aab"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"aab"&amp#27;[0m                                   &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:24,454 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:24,455 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": "aab is not a valid type",
    "source": "beneficiary.bank_details.account_routing_type1"
}

    Response : {
        "code": "invalid_argument",
        "message": "aab is not a valid type",
        "source": "beneficiary.bank_details.account_routing_type1"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                             &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:24,456 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:24,456 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:24,467 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:24,487 [INFO  ] Log - >> Response message contains value aab is not a valid type
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"aab is not a valid type"&amp#27;[0m                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:24,513 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_routing_type1
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_routing_type1"&amp#27;[0m                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; AU when &quot;account_routing_type1&quot; baa has invalid characters &lt;number_of_characters&gt;&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](52)" classname="cucumber.Options.RunCucumberTests" time="0.653">
    <system-out><![CDATA[
Scenario Outline: Validate error response is returned for "bank_country_code" AU when "account_routing_type1" baa has invalid characters <number_of_characters> &amp#27;[90m# src/test/resources/features/Routing_Type.feature:35&amp#27;[0m
2021-08-23 21:36:24,538 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:24,538 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" AU when "account_routing_type1" baa has invalid characters <number_of_characters>
2021-08-23 21:36:24,538 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:24,961 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                    &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:24,961 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:24,961 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "baa"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "baa"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"baa"&amp#27;[0m                                   &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:25,286 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:25,287 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": "baa is not a valid type",
    "source": "beneficiary.bank_details.account_routing_type1"
}

    Response : {
        "code": "invalid_argument",
        "message": "baa is not a valid type",
        "source": "beneficiary.bank_details.account_routing_type1"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                             &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:25,287 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:25,287 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:25,294 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:25,309 [INFO  ] Log - >> Response message contains value baa is not a valid type
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"baa is not a valid type"&amp#27;[0m                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:25,322 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_routing_type1
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_routing_type1"&amp#27;[0m                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; CN when &quot;account_routing_type1&quot; caa has invalid characters &lt;number_of_characters&gt;&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](53)" classname="cucumber.Options.RunCucumberTests" time="0.914">
    <system-out><![CDATA[
Scenario Outline: Validate error response is returned for "bank_country_code" CN when "account_routing_type1" caa has invalid characters <number_of_characters> &amp#27;[90m# src/test/resources/features/Routing_Type.feature:36&amp#27;[0m
2021-08-23 21:36:25,335 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:25,335 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" CN when "account_routing_type1" caa has invalid characters <number_of_characters>
2021-08-23 21:36:25,335 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:25,799 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                    &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:25,800 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:25,800 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "ICBKCNBJ",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "caa"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "ICBKCNBJ",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "caa"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"caa"&amp#27;[0m                                   &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:26,132 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:26,133 [INFO  ] Log - >> 
Response : {
    "code": "invalid_argument",
    "message": "caa is not a valid type",
    "source": "beneficiary.bank_details.account_routing_type1"
}

    Response : {
        "code": "invalid_argument",
        "message": "caa is not a valid type",
        "source": "beneficiary.bank_details.account_routing_type1"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                             &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:26,134 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:26,134 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:26,145 [INFO  ] Log - >> Response code contains value invalid_argument
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"invalid_argument"&amp#27;[0m                                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:26,172 [INFO  ] Log - >> Response message contains value caa is not a valid type
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"caa is not a valid type"&amp#27;[0m                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:26,195 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_routing_type1
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_routing_type1"&amp#27;[0m                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; US, &quot;account_routing_type1&quot; aba when &quot;account_routing_value1&quot; 12345678 contains invalid no. of charaters&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](54)" classname="cucumber.Options.RunCucumberTests" time="0.854">
    <system-out><![CDATA[
@RequirementMismatch-RequiredField @RequirementMismatch-AUAcctRoutingValueLength
Scenario Outline: Validate error response is returned for "bank_country_code" US, "account_routing_type1" aba when "account_routing_value1" 12345678 contains invalid no. of charaters &amp#27;[90m# src/test/resources/features/Routing_Type.feature:50&amp#27;[0m
2021-08-23 21:36:26,217 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:26,217 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" US, "account_routing_type1" aba when "account_routing_value1" 12345678 contains invalid no. of charaters
2021-08-23 21:36:26,217 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:26,641 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                                           &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:26,642 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:26,642 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "12345678",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "12345678",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bank_Country_Code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"aba"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_value1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"12345678"&amp#27;[0m                   &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:27,004 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:27,005 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should be 9 characters long",
    "source": "beneficiary.bank_details.account_routing_value1"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should be 9 characters long",
        "source": "beneficiary.bank_details.account_routing_value1"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                                    &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:27,006 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:27,006 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:27,020 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:27,045 [INFO  ] Log - >> Response message contains value Should be 9 characters long
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Should be 9 characters long"&amp#27;[0m                                                                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:27,069 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_routing_value1
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_routing_value1"&amp#27;[0m                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; US, &quot;account_routing_type1&quot; aba when &quot;account_routing_value1&quot; 1234567890 contains invalid no. of charaters&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](55)" classname="cucumber.Options.RunCucumberTests" time="0.942">
    <system-out><![CDATA[
@RequirementMismatch-RequiredField @RequirementMismatch-AUAcctRoutingValueLength
Scenario Outline: Validate error response is returned for "bank_country_code" US, "account_routing_type1" aba when "account_routing_value1" 1234567890 contains invalid no. of charaters &amp#27;[90m# src/test/resources/features/Routing_Type.feature:51&amp#27;[0m
2021-08-23 21:36:27,101 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:27,101 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" US, "account_routing_type1" aba when "account_routing_value1" 1234567890 contains invalid no. of charaters
2021-08-23 21:36:27,101 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:27,536 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                                             &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:27,537 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:27,537 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "1234567890",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "1234567890",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bank_Country_Code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"aba"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_value1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"1234567890"&amp#27;[0m                   &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:27,908 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:27,909 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should be 9 characters long",
    "source": "beneficiary.bank_details.account_routing_value1"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should be 9 characters long",
        "source": "beneficiary.bank_details.account_routing_value1"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                                      &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:27,910 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:27,910 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:27,924 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:27,954 [INFO  ] Log - >> Response message contains value Should be 9 characters long
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Should be 9 characters long"&amp#27;[0m                                                                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:27,981 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.account_routing_value1
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.account_routing_value1"&amp#27;[0m                                                                                                      &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; AU, &quot;account_routing_type1&quot; bsb when &quot;account_routing_value1&quot; 12345 contains invalid no. of charaters&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](56)" classname="cucumber.Options.RunCucumberTests" time="0.953">
    <failure message="Cannot invoke &quot;Object.toString()&quot; because the return value of &quot;io.restassured.path.json.JsonPath.get(String)&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-RequiredField @RequirementMismatch-AUAcctRoutingValueLength
Scenario Outline: Validate error response is returned for "bank_country_code" AU, "account_routing_type1" bsb when "account_routing_value1" 12345 contains invalid no. of charaters &amp#27;[90m# src/test/resources/features/Routing_Type.feature:52&amp#27;[0m
2021-08-23 21:36:28,013 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:28,013 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" AU, "account_routing_type1" bsb when "account_routing_value1" 12345 contains invalid no. of charaters
2021-08-23 21:36:28,013 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:28,432 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:28,433 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:28,433 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "12345",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "12345",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bank_Country_Code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"bsb"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_value1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"12345"&amp#27;[0m                   &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:28,863 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:28,865 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "Lee Da Ming",
            "account_number": "12750852",
            "account_routing_type1": "bsb",
            "account_routing_value1": "12345",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "910e284b-ab69-429b-86d3-6f39a96256ba",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "Lee Da Ming",
                "account_number": "12750852",
                "account_routing_type1": "bsb",
                "account_routing_value1": "12345",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "910e284b-ab69-429b-86d3-6f39a96256ba",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                                 &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:28,867 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:28,868 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mResponse &amp#27;[0m&amp#27;[31m&amp#27;[1m"code"&amp#27;[0m&amp#27;[31m has value &amp#27;[0m&amp#27;[31m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
	at utilities.Json_handler.getJsonPath(Json_handler.java:21)
	at stepDefinitions.Then_Steps.response_contains_value(Then_Steps.java:57)
	at âœ½.Response "code" has value "payment_schema_validation_failed"(file:///C:/SnehProjects/DemoProject/Demo_APIFramework/src/test/resources/features/Routing_Type.feature:44)
&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"message"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"Should be 6 characters long"&amp#27;[0m                                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"source"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"beneficiary.bank_details.account_routing_value1"&amp#27;[0m                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [400] but found [201],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; AU, &quot;account_routing_type1&quot; bsb when &quot;account_routing_value1&quot; 1234567890 contains invalid no. of charaters&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](57)" classname="cucumber.Options.RunCucumberTests" time="0.808">
    <failure message="Cannot invoke &quot;Object.toString()&quot; because the return value of &quot;io.restassured.path.json.JsonPath.get(String)&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-RequiredField @RequirementMismatch-AUAcctRoutingValueLength
Scenario Outline: Validate error response is returned for "bank_country_code" AU, "account_routing_type1" bsb when "account_routing_value1" 1234567890 contains invalid no. of charaters &amp#27;[90m# src/test/resources/features/Routing_Type.feature:53&amp#27;[0m
2021-08-23 21:36:28,901 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:28,902 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" AU, "account_routing_type1" bsb when "account_routing_value1" 1234567890 contains invalid no. of charaters
2021-08-23 21:36:28,902 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:29,328 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                                             &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:29,329 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:29,329 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "1234567890",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "1234567890",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bank_Country_Code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"bsb"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_value1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"1234567890"&amp#27;[0m                   &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:29,683 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:29,684 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "Lee Da Ming",
            "account_number": "12750852",
            "account_routing_type1": "bsb",
            "account_routing_value1": "1234567890",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "1db2fa47-027d-4879-9ff0-09dbeee13851",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "Lee Da Ming",
                "account_number": "12750852",
                "account_routing_type1": "bsb",
                "account_routing_value1": "1234567890",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "1db2fa47-027d-4879-9ff0-09dbeee13851",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                                      &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:29,685 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:29,686 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mResponse &amp#27;[0m&amp#27;[31m&amp#27;[1m"code"&amp#27;[0m&amp#27;[31m has value &amp#27;[0m&amp#27;[31m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
	at utilities.Json_handler.getJsonPath(Json_handler.java:21)
	at stepDefinitions.Then_Steps.response_contains_value(Then_Steps.java:57)
	at âœ½.Response "code" has value "payment_schema_validation_failed"(file:///C:/SnehProjects/DemoProject/Demo_APIFramework/src/test/resources/features/Routing_Type.feature:44)
&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"message"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"Should be 6 characters long"&amp#27;[0m                                                                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"source"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"beneficiary.bank_details.account_routing_value1"&amp#27;[0m                                                                                                      &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [400] but found [201],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; US, &quot;account_routing_type1&quot; aba when &quot;account_routing_value1&quot;  contains invalid no. of charaters&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](58)" classname="cucumber.Options.RunCucumberTests" time="0.774">
    <failure message="Cannot invoke &quot;Object.toString()&quot; because the return value of &quot;io.restassured.path.json.JsonPath.get(String)&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-RequiredField @RequirementMismatch-AUAcctRoutingValueLength
Scenario Outline: Validate error response is returned for "bank_country_code" US, "account_routing_type1" aba when "account_routing_value1"  contains invalid no. of charaters &amp#27;[90m# src/test/resources/features/Routing_Type.feature:54&amp#27;[0m
2021-08-23 21:36:29,719 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:29,719 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" US, "account_routing_type1" aba when "account_routing_value1"  contains invalid no. of charaters
2021-08-23 21:36:29,719 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:30,147 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                                   &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:30,148 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:30,149 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bank_Country_Code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"aba"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_value1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m                   &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:30,523 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:30,524 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "John Walker",
            "account_number": "502231121",
            "account_routing_type1": "aba",
            "account_routing_value1": "",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "260ea6f7-78b7-45b7-ac67-8d4632f7cc0b",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "John Walker",
                "account_number": "502231121",
                "account_routing_type1": "aba",
                "account_routing_value1": "",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "260ea6f7-78b7-45b7-ac67-8d4632f7cc0b",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                            &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:30,526 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:30,526 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mResponse &amp#27;[0m&amp#27;[31m&amp#27;[1m"code"&amp#27;[0m&amp#27;[31m has value &amp#27;[0m&amp#27;[31m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
	at utilities.Json_handler.getJsonPath(Json_handler.java:21)
	at stepDefinitions.Then_Steps.response_contains_value(Then_Steps.java:57)
	at âœ½.Response "code" has value "payment_schema_validation_failed"(file:///C:/SnehProjects/DemoProject/Demo_APIFramework/src/test/resources/features/Routing_Type.feature:44)
&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"message"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"Should be 9 characters long"&amp#27;[0m                                                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"source"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"beneficiary.bank_details.account_routing_value1"&amp#27;[0m                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [400] but found [201],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; AU, &quot;account_routing_type1&quot; bsb when &quot;account_routing_value1&quot;  contains invalid no. of charaters&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](59)" classname="cucumber.Options.RunCucumberTests" time="0.839">
    <failure message="Cannot invoke &quot;Object.toString()&quot; because the return value of &quot;io.restassured.path.json.JsonPath.get(String)&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-RequiredField @RequirementMismatch-AUAcctRoutingValueLength
Scenario Outline: Validate error response is returned for "bank_country_code" AU, "account_routing_type1" bsb when "account_routing_value1"  contains invalid no. of charaters &amp#27;[90m# src/test/resources/features/Routing_Type.feature:55&amp#27;[0m
2021-08-23 21:36:30,547 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:30,547 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" AU, "account_routing_type1" bsb when "account_routing_value1"  contains invalid no. of charaters
2021-08-23 21:36:30,548 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:30,963 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                                   &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:30,964 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:30,964 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bank_Country_Code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"bsb"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_value1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m                   &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:31,359 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:31,359 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "Lee Da Ming",
            "account_number": "12750852",
            "account_routing_type1": "bsb",
            "account_routing_value1": "",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "a8994024-dc3f-4026-a489-f709e50dd147",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "Lee Da Ming",
                "account_number": "12750852",
                "account_routing_type1": "bsb",
                "account_routing_value1": "",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "a8994024-dc3f-4026-a489-f709e50dd147",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                            &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:31,360 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:31,361 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mResponse &amp#27;[0m&amp#27;[31m&amp#27;[1m"code"&amp#27;[0m&amp#27;[31m has value &amp#27;[0m&amp#27;[31m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "io.restassured.path.json.JsonPath.get(String)" is null
	at utilities.Json_handler.getJsonPath(Json_handler.java:21)
	at stepDefinitions.Then_Steps.response_contains_value(Then_Steps.java:57)
	at âœ½.Response "code" has value "payment_schema_validation_failed"(file:///C:/SnehProjects/DemoProject/Demo_APIFramework/src/test/resources/features/Routing_Type.feature:44)
&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"message"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"Should be 6 characters long"&amp#27;[0m                                                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mResponse &amp#27;[0m&amp#27;[36m&amp#27;[1m"source"&amp#27;[0m&amp#27;[36m has value &amp#27;[0m&amp#27;[36m&amp#27;[1m"beneficiary.bank_details.account_routing_value1"&amp#27;[0m                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [400] but found [201],
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; US, &quot;account_routing_type1&quot; aba when &quot;account_routing_value1&quot; 123456789 contains invalid no. of charaters&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](60)" classname="cucumber.Options.RunCucumberTests" time="0.832">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate error response is returned for "bank_country_code" US, "account_routing_type1" aba when "account_routing_value1" 123456789 contains invalid no. of charaters &amp#27;[90m# src/test/resources/features/Routing_Type.feature:66&amp#27;[0m
2021-08-23 21:36:31,380 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:31,380 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" US, "account_routing_type1" aba when "account_routing_value1" 123456789 contains invalid no. of charaters
2021-08-23 21:36:31,380 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:31,838 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                                            &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:31,838 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:31,838 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "123456789",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "123456789",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bank_Country_Code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"aba"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_value1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"123456789"&amp#27;[0m                   &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:32,188 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:32,189 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "John Walker",
            "account_number": "502231121",
            "account_routing_type1": "aba",
            "account_routing_value1": "123456789",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "e237a49a-218d-4ee6-88e2-b1fc4a9f5435",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "John Walker",
                "account_number": "502231121",
                "account_routing_type1": "aba",
                "account_routing_value1": "123456789",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "e237a49a-218d-4ee6-88e2-b1fc4a9f5435",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                                     &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:32,191 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                                      &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:32,192 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error response is returned for &quot;bank_country_code&quot; AU, &quot;account_routing_type1&quot; bsb when &quot;account_routing_value1&quot; 123456 contains invalid no. of charaters&quot;, &quot;Optional[Validates Routing_type and Routing_value in BankDetails]&quot;](61)" classname="cucumber.Options.RunCucumberTests" time="0.879">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate error response is returned for "bank_country_code" AU, "account_routing_type1" bsb when "account_routing_value1" 123456 contains invalid no. of charaters &amp#27;[90m# src/test/resources/features/Routing_Type.feature:67&amp#27;[0m
2021-08-23 21:36:32,202 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:32,202 [INFO  ] Log - >> Validate error response is returned for "bank_country_code" AU, "account_routing_type1" bsb when "account_routing_value1" 123456 contains invalid no. of charaters
2021-08-23 21:36:32,202 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:32,662 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                                         &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:32,663 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:32,663 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "123456",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "123456",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bank_Country_Code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_type1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"bsb"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"account_routing_value1"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"123456"&amp#27;[0m                   &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:33,059 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:33,060 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "Lee Da Ming",
            "account_number": "12750852",
            "account_routing_type1": "bsb",
            "account_routing_value1": "123456",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "f599529a-e208-4f70-9bb5-a2597621ae23",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "Lee Da Ming",
                "account_number": "12750852",
                "account_routing_type1": "bsb",
                "account_routing_value1": "123456",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "f599529a-e208-4f70-9bb5-a2597621ae23",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                                  &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:33,061 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                                   &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:33,061 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates error response is received when payment_methods=SWIFT and Payload field swift_code is missing&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](62)" classname="cucumber.Options.RunCucumberTests" time="0.955">
    <system-out><![CDATA[
@SchemaValidation
Scenario: Validates error response is received when payment_methods=SWIFT and Payload field swift_code is missing &amp#27;[90m# src/test/resources/features/Swift_code.feature:7&amp#27;[0m
2021-08-23 21:36:33,069 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:33,069 [INFO  ] Log - >> Validates error response is received when payment_methods=SWIFT and Payload field swift_code is missing
2021-08-23 21:36:33,069 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:33,586 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                      &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:33,587 [INFO  ] Log - >> Request PayLoad Created with all keys, except without  swift_code
2021-08-23 21:36:33,587 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys without &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m                                  &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_without_bank_country_code(java.lang.String)&amp#27;[0m
2021-08-23 21:36:33,941 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:33,943 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "This field is required",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "This field is required",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                               &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:33,944 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:33,945 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:33,963 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:34,001 [INFO  ] Log - >> Response message contains value This field is required
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"This field is required"&amp#27;[0m                                                       &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:34,048 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                           &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validates error response is received when payment_methods=SWIFT and Payload feild swift_code is Empty&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](63)" classname="cucumber.Options.RunCucumberTests" time="0.861">
    <system-out><![CDATA[
@SchemaValidation
Scenario: Validates error response is received when payment_methods=SWIFT and Payload feild swift_code is Empty &amp#27;[90m# src/test/resources/features/Swift_code.feature:17&amp#27;[0m
2021-08-23 21:36:34,066 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:34,066 [INFO  ] Log - >> Validates error response is received when payment_methods=SWIFT and Payload feild swift_code is Empty
2021-08-23 21:36:34,066 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:34,506 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                    &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:34,507 [INFO  ] Log - >> Request PayLoad Created with all keys, with swift_code value is Empty
2021-08-23 21:36:34,507 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Empty"&amp#27;[0m                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_bank_country_code_is(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:34,851 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:34,852 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "This field is required",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "This field is required",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                             &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:34,853 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:34,853 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:34,868 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:34,888 [INFO  ] Log - >> Response message contains value This field is required
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"This field is required"&amp#27;[0m                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:34,908 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error message is returned for &quot;bank_country_code&quot; &lt;Bank_country_code&gt; when &quot;swift_code&quot; ICBKUS lessthan 8 or greaterthan 11 charcters&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](64)" classname="cucumber.Options.RunCucumberTests" time="0.93">
    <failure message="The following asserts failed:&#10;	expected [Length of &apos;swift_code&apos; should be either 8 or 11] but found [Should be a valid and supported SWIFT code / BIC]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [Length of 'swift_code' should be either 8 or 11] but found [Should be a valid and supported SWIFT code / BIC]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error message is returned for "bank_country_code" <Bank_country_code> when "swift_code" ICBKUS lessthan 8 or greaterthan 11 charcters &amp#27;[90m# src/test/resources/features/Swift_code.feature:38&amp#27;[0m
2021-08-23 21:36:34,941 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:34,941 [INFO  ] Log - >> Validate error message is returned for "bank_country_code" <Bank_country_code> when "swift_code" ICBKUS lessthan 8 or greaterthan 11 charcters
2021-08-23 21:36:34,941 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:35,409 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                     &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:35,410 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:35,410 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "ICBKUS",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "ICBKUS",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"ICBKUS"&amp#27;[0m                                            &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:35,766 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:35,768 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should be a valid and supported SWIFT code / BIC",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should be a valid and supported SWIFT code / BIC",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                              &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:35,770 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:35,774 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                      &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:35,785 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:35,810 [INFO  ] Log - >> Response message contains value Should be a valid and supported SWIFT code / BIC
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Length of 'swift_code' should be either 8 or 11"&amp#27;[0m                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:35,837 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                                                                          &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [Length of 'swift_code' should be either 8 or 11] but found [Should be a valid and supported SWIFT code / BIC]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error message is returned for &quot;bank_country_code&quot; &lt;Bank_country_code&gt; when &quot;swift_code&quot; ICBKAUBJ123w lessthan 8 or greaterthan 11 charcters&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](65)" classname="cucumber.Options.RunCucumberTests" time="0.923">
    <failure message="The following asserts failed:&#10;	expected [Length of &apos;swift_code&apos; should be either 8 or 11] but found [Should be a valid and supported SWIFT code / BIC]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [Length of 'swift_code' should be either 8 or 11] but found [Should be a valid and supported SWIFT code / BIC]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error message is returned for "bank_country_code" <Bank_country_code> when "swift_code" ICBKAUBJ123w lessthan 8 or greaterthan 11 charcters &amp#27;[90m# src/test/resources/features/Swift_code.feature:39&amp#27;[0m
2021-08-23 21:36:35,864 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:35,864 [INFO  ] Log - >> Validate error message is returned for "bank_country_code" <Bank_country_code> when "swift_code" ICBKAUBJ123w lessthan 8 or greaterthan 11 charcters
2021-08-23 21:36:35,864 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:36,297 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                           &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:36,298 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:36,298 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "ICBKAUBJ123w",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "ICBKAUBJ123w",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"ICBKAUBJ123w"&amp#27;[0m                                            &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:36,645 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:36,647 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should be a valid and supported SWIFT code / BIC",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should be a valid and supported SWIFT code / BIC",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                    &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:36,647 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:36,648 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:36,661 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                     &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:36,690 [INFO  ] Log - >> Response message contains value Should be a valid and supported SWIFT code / BIC
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"Length of 'swift_code' should be either 8 or 11"&amp#27;[0m                                                                                   &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:36,730 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                                                                                &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [Length of 'swift_code' should be either 8 or 11] but found [Should be a valid and supported SWIFT code / BIC]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error message is returned when &quot;swift_code&quot; CHAS33US do not contain passed &lt;Bank_country_code&gt; at 5th and 6th character&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](66)" classname="cucumber.Options.RunCucumberTests" time="0.91">
    <failure message="The following asserts failed:&#10;	expected [The swift code is not valid for the given bank country code: &lt;Bank_country_code&gt;] but found [Should be a valid and supported SWIFT code / BIC]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [Should be a valid and supported SWIFT code / BIC]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error message is returned when "swift_code" CHAS33US do not contain passed <Bank_country_code> at 5th and 6th character &amp#27;[90m# src/test/resources/features/Swift_code.feature:53&amp#27;[0m
2021-08-23 21:36:36,753 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:36,754 [INFO  ] Log - >> Validate error message is returned when "swift_code" CHAS33US do not contain passed <Bank_country_code> at 5th and 6th character
2021-08-23 21:36:36,754 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:37,186 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                       &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:37,187 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:37,188 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHAS33US",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHAS33US",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CHAS33US"&amp#27;[0m                            &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:37,566 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:37,567 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should be a valid and supported SWIFT code / BIC",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should be a valid and supported SWIFT code / BIC",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:37,567 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:37,568 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:37,582 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:37,612 [INFO  ] Log - >> Response message contains value Should be a valid and supported SWIFT code / BIC
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"The swift code is not valid for the given bank country code: <Bank_country_code>"&amp#27;[0m                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:37,639 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [Should be a valid and supported SWIFT code / BIC]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error message is returned when &quot;swift_code&quot; USAS33US do not contain passed &lt;Bank_country_code&gt; at 5th and 6th character&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](67)" classname="cucumber.Options.RunCucumberTests" time="0.999">
    <failure message="The following asserts failed:&#10;	expected [The swift code is not valid for the given bank country code: &lt;Bank_country_code&gt;] but found [Should be a valid and supported SWIFT code / BIC]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [Should be a valid and supported SWIFT code / BIC]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error message is returned when "swift_code" USAS33US do not contain passed <Bank_country_code> at 5th and 6th character &amp#27;[90m# src/test/resources/features/Swift_code.feature:54&amp#27;[0m
2021-08-23 21:36:37,670 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:37,671 [INFO  ] Log - >> Validate error message is returned when "swift_code" USAS33US do not contain passed <Bank_country_code> at 5th and 6th character
2021-08-23 21:36:37,671 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:38,193 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                       &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:38,194 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:38,194 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "USAS33US",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "USAS33US",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"USAS33US"&amp#27;[0m                            &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:38,589 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:38,590 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should be a valid and supported SWIFT code / BIC",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should be a valid and supported SWIFT code / BIC",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:38,591 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:38,591 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:38,607 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:38,631 [INFO  ] Log - >> Response message contains value Should be a valid and supported SWIFT code / BIC
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"The swift code is not valid for the given bank country code: <Bank_country_code>"&amp#27;[0m                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:38,658 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [Should be a valid and supported SWIFT code / BIC]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error message is returned when &quot;swift_code&quot; CNAS33US do not contain passed &lt;Bank_country_code&gt; at 5th and 6th character&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](68)" classname="cucumber.Options.RunCucumberTests" time="0.951">
    <failure message="The following asserts failed:&#10;	expected [The swift code is not valid for the given bank country code: &lt;Bank_country_code&gt;] but found [Should be a valid and supported SWIFT code / BIC]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [Should be a valid and supported SWIFT code / BIC]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error message is returned when "swift_code" CNAS33US do not contain passed <Bank_country_code> at 5th and 6th character &amp#27;[90m# src/test/resources/features/Swift_code.feature:55&amp#27;[0m
2021-08-23 21:36:38,682 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:38,682 [INFO  ] Log - >> Validate error message is returned when "swift_code" CNAS33US do not contain passed <Bank_country_code> at 5th and 6th character
2021-08-23 21:36:38,682 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:39,111 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                       &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:39,111 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:39,111 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "CNAS33US",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "CNAS33US",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CNAS33US"&amp#27;[0m                            &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:39,528 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:39,529 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should be a valid and supported SWIFT code / BIC",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should be a valid and supported SWIFT code / BIC",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:39,530 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:39,530 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:39,545 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:39,572 [INFO  ] Log - >> Response message contains value Should be a valid and supported SWIFT code / BIC
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"The swift code is not valid for the given bank country code: <Bank_country_code>"&amp#27;[0m                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:39,599 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [Should be a valid and supported SWIFT code / BIC]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error message is returned when &quot;swift_code&quot; CHASAU33 do not match with &quot;Bank_Country_Code&quot; &lt;Bank_country_code&gt; at 5th and 6th character&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](69)" classname="cucumber.Options.RunCucumberTests" time="0.941">
    <failure message="The following asserts failed:&#10;	expected [The swift code is not valid for the given bank country code: &lt;Bank_country_code&gt;] but found [Should be a valid and supported SWIFT code / BIC]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [Should be a valid and supported SWIFT code / BIC]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error message is returned when "swift_code" CHASAU33 do not match with "Bank_Country_Code" <Bank_country_code> at 5th and 6th character &amp#27;[90m# src/test/resources/features/Swift_code.feature:69&amp#27;[0m
2021-08-23 21:36:39,626 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:39,627 [INFO  ] Log - >> Validate error message is returned when "swift_code" CHASAU33 do not match with "Bank_Country_Code" <Bank_country_code> at 5th and 6th character
2021-08-23 21:36:39,627 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:40,140 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                       &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:40,140 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:40,140 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASAU33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASAU33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CHASAU33"&amp#27;[0m                                            &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:40,537 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:40,538 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should be a valid and supported SWIFT code / BIC",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should be a valid and supported SWIFT code / BIC",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:40,538 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:40,539 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:40,554 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:40,578 [INFO  ] Log - >> Response message contains value Should be a valid and supported SWIFT code / BIC
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"The swift code is not valid for the given bank country code: <Bank_country_code>"&amp#27;[0m                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:40,605 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [Should be a valid and supported SWIFT code / BIC]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error message is returned when &quot;swift_code&quot; CHASUS33 do not match with &quot;Bank_Country_Code&quot; &lt;Bank_country_code&gt; at 5th and 6th character&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](70)" classname="cucumber.Options.RunCucumberTests" time="0.921">
    <failure message="The following asserts failed:&#10;	expected [The swift code is not valid for the given bank country code: &lt;Bank_country_code&gt;] but found [The SWIFT code / BIC should match the bank location selected ]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [The SWIFT code / BIC should match the bank location selected ]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error message is returned when "swift_code" CHASUS33 do not match with "Bank_Country_Code" <Bank_country_code> at 5th and 6th character &amp#27;[90m# src/test/resources/features/Swift_code.feature:70&amp#27;[0m
2021-08-23 21:36:40,631 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:40,631 [INFO  ] Log - >> Validate error message is returned when "swift_code" CHASUS33 do not match with "Bank_Country_Code" <Bank_country_code> at 5th and 6th character
2021-08-23 21:36:40,631 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:41,063 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                       &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:41,063 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:41,063 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CHASUS33",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CHASUS33",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CHASUS33"&amp#27;[0m                                            &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:41,457 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:41,458 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "The SWIFT code / BIC should match the bank location selected ",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "The SWIFT code / BIC should match the bank location selected ",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:41,459 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:41,460 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:41,478 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:41,520 [INFO  ] Log - >> Response message contains value The SWIFT code / BIC should match the bank location selected 
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"The swift code is not valid for the given bank country code: <Bank_country_code>"&amp#27;[0m                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:41,538 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [The SWIFT code / BIC should match the bank location selected ]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error message is returned when &quot;swift_code&quot; CHASAU33 do not match with &quot;Bank_Country_Code&quot; &lt;Bank_country_code&gt; at 5th and 6th character&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](71)" classname="cucumber.Options.RunCucumberTests" time="0.899">
    <failure message="The following asserts failed:&#10;	expected [The swift code is not valid for the given bank country code: &lt;Bank_country_code&gt;] but found [Should be a valid and supported SWIFT code / BIC]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [Should be a valid and supported SWIFT code / BIC]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error message is returned when "swift_code" CHASAU33 do not match with "Bank_Country_Code" <Bank_country_code> at 5th and 6th character &amp#27;[90m# src/test/resources/features/Swift_code.feature:71&amp#27;[0m
2021-08-23 21:36:41,556 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:41,556 [INFO  ] Log - >> Validate error message is returned when "swift_code" CHASAU33 do not match with "Bank_Country_Code" <Bank_country_code> at 5th and 6th character
2021-08-23 21:36:41,556 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:41,983 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                       &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:41,984 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:41,984 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "CN",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "CAD",
            "bank_country_code": "CN",
            "swift_code": "CHASAU33",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Canadian Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "CN",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "CAD",
                "bank_country_code": "CN",
                "swift_code": "CHASAU33",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Canadian Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CN"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CHASAU33"&amp#27;[0m                                            &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:42,347 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:42,347 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "Should be a valid and supported SWIFT code / BIC",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "Should be a valid and supported SWIFT code / BIC",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:42,348 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:42,350 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                        &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:42,362 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                 &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:42,388 [INFO  ] Log - >> Response message contains value Should be a valid and supported SWIFT code / BIC
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"The swift code is not valid for the given bank country code: <Bank_country_code>"&amp#27;[0m                                              &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:42,408 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                                                                            &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [Should be a valid and supported SWIFT code / BIC]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error message is returned when &quot;swift_code&quot; CHASUS33 matches with &quot;country_code&quot; US but not with &quot;bank_country_code&quot; &lt;Bank_country_code&gt;&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](72)" classname="cucumber.Options.RunCucumberTests" time="0.948">
    <failure message="The following asserts failed:&#10;	expected [The swift code is not valid for the given bank country code: &lt;Bank_country_code&gt;] but found [The SWIFT code / BIC should match the bank location selected ]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [The SWIFT code / BIC should match the bank location selected ]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error message is returned when "swift_code" CHASUS33 matches with "country_code" US but not with "bank_country_code" <Bank_country_code> &amp#27;[90m# src/test/resources/features/Swift_code.feature:85&amp#27;[0m
2021-08-23 21:36:42,444 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:42,445 [INFO  ] Log - >> Validate error message is returned when "swift_code" CHASUS33 matches with "country_code" US but not with "bank_country_code" <Bank_country_code>
2021-08-23 21:36:42,445 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:42,905 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:42,906 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:42,906 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "AU",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "AU",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CHASUS33"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:43,300 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:43,301 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "The SWIFT code / BIC should match the bank location selected ",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "The SWIFT code / BIC should match the bank location selected ",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                 &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:43,302 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:43,302 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:43,315 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:43,342 [INFO  ] Log - >> Response message contains value The SWIFT code / BIC should match the bank location selected 
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"The swift code is not valid for the given bank country code: <Bank_country_code>"&amp#27;[0m                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:43,377 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [The SWIFT code / BIC should match the bank location selected ]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate error message is returned when &quot;swift_code&quot; CTBAAU2S matches with &quot;country_code&quot; AU but not with &quot;bank_country_code&quot; &lt;Bank_country_code&gt;&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](73)" classname="cucumber.Options.RunCucumberTests" time="1.016">
    <failure message="The following asserts failed:&#10;	expected [The swift code is not valid for the given bank country code: &lt;Bank_country_code&gt;] but found [The SWIFT code / BIC should match the bank location selected ]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [The SWIFT code / BIC should match the bank location selected ]
]]></failure>
    <system-out><![CDATA[
@RequirementMismatch-ImproperResponseMessage
Scenario Outline: Validate error message is returned when "swift_code" CTBAAU2S matches with "country_code" AU but not with "bank_country_code" <Bank_country_code> &amp#27;[90m# src/test/resources/features/Swift_code.feature:86&amp#27;[0m
2021-08-23 21:36:43,400 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:43,401 [INFO  ] Log - >> Validate error message is returned when "swift_code" CTBAAU2S matches with "country_code" AU but not with "bank_country_code" <Bank_country_code>
2021-08-23 21:36:43,401 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:43,927 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                        &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:43,928 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:43,928 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "US",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "US",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CTBAAU2S"&amp#27;[0m                      &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:44,325 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:44,326 [INFO  ] Log - >> 
Response : {
    "code": "payment_schema_validation_failed",
    "message": "The SWIFT code / BIC should match the bank location selected ",
    "source": "beneficiary.bank_details.swift_code"
}

    Response : {
        "code": "payment_schema_validation_failed",
        "message": "The SWIFT code / BIC should match the bank location selected ",
        "source": "beneficiary.bank_details.swift_code"
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                 &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:44,326 [INFO  ] Log - >> Response status code is 400
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m                                                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:44,327 [INFO  ] Log - >> Response status line is HTTP/1.1 400 Bad Request
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Bad Request"&amp#27;[0m                                                                                                                         &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
2021-08-23 21:36:44,339 [INFO  ] Log - >> Response code contains value payment_schema_validation_failed
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"code"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"payment_schema_validation_failed"&amp#27;[0m                                                                                                  &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:44,363 [INFO  ] Log - >> Response message contains value The SWIFT code / BIC should match the bank location selected 
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"message"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"The swift code is not valid for the given bank country code: <Bank_country_code>"&amp#27;[0m                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:44,390 [INFO  ] Log - >> Response source contains value beneficiary.bank_details.swift_code
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse &amp#27;[0m&amp#27;[32m&amp#27;[1m"source"&amp#27;[0m&amp#27;[32m has value &amp#27;[0m&amp#27;[32m&amp#27;[1m"beneficiary.bank_details.swift_code"&amp#27;[0m                                                                                             &amp#27;[90m# stepDefinitions.Then_Steps.response_contains_value(java.lang.String,java.lang.String)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: The following asserts failed:
	expected [The swift code is not valid for the given bank country code: <Bank_country_code>] but found [The SWIFT code / BIC should match the bank location selected ]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
	at stepDefinitions.Then_Steps.after(Then_Steps.java:30)
&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate correct message is returned when &quot;swift_code&quot; CHASUS33 matches with &quot;country_code&quot; US but not with &quot;bank_country_code&quot; &lt;Bank_country_code&gt;&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](74)" classname="cucumber.Options.RunCucumberTests" time="0.846">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate correct message is returned when "swift_code" CHASUS33 matches with "country_code" US but not with "bank_country_code" <Bank_country_code> &amp#27;[90m# src/test/resources/features/Swift_code.feature:97&amp#27;[0m
2021-08-23 21:36:44,417 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:44,417 [INFO  ] Log - >> Validate correct message is returned when "swift_code" CHASUS33 matches with "country_code" US but not with "bank_country_code" <Bank_country_code>
2021-08-23 21:36:44,417 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:44,851 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                          &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:44,851 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:44,851 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "US",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "502231121",
            "account_currency": "USD",
            "bank_country_code": "US",
            "swift_code": "CHASUS33",
            "account_name": "John Walker",
            "bank_name": "JP Morgan Chase Bank",
            "account_routing_value1": "907765701",
            "account_routing_type1": "aba"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "US",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "502231121",
                "account_currency": "USD",
                "bank_country_code": "US",
                "swift_code": "CHASUS33",
                "account_name": "John Walker",
                "bank_name": "JP Morgan Chase Bank",
                "account_routing_value1": "907765701",
                "account_routing_type1": "aba"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"US"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CHASUS33"&amp#27;[0m                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:45,248 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:45,249 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "US",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "USD",
            "account_name": "John Walker",
            "account_number": "502231121",
            "account_routing_type1": "aba",
            "account_routing_value1": "907765701",
            "bank_country_code": "US",
            "bank_name": "JP Morgan Chase Bank",
            "swift_code": "CHASUS33"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "99f7c99e-e7b3-49f9-a411-6d92cf6edab1",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "US",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "USD",
                "account_name": "John Walker",
                "account_number": "502231121",
                "account_routing_type1": "aba",
                "account_routing_value1": "907765701",
                "bank_country_code": "US",
                "bank_name": "JP Morgan Chase Bank",
                "swift_code": "CHASUS33"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "99f7c99e-e7b3-49f9-a411-6d92cf6edab1",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                   &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:45,250 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:45,250 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Validate correct message is returned when &quot;swift_code&quot; CTBAAU2S matches with &quot;country_code&quot; AU but not with &quot;bank_country_code&quot; &lt;Bank_country_code&gt;&quot;, &quot;Optional[Validates swift_code in BankDetails]&quot;](75)" classname="cucumber.Options.RunCucumberTests" time="0.941">
    <system-out><![CDATA[
@PositiveScenarios
Scenario Outline: Validate correct message is returned when "swift_code" CTBAAU2S matches with "country_code" AU but not with "bank_country_code" <Bank_country_code> &amp#27;[90m# src/test/resources/features/Swift_code.feature:98&amp#27;[0m
2021-08-23 21:36:45,259 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:45,259 [INFO  ] Log - >> Validate correct message is returned when "swift_code" CTBAAU2S matches with "country_code" AU but not with "bank_country_code" <Bank_country_code>
2021-08-23 21:36:45,259 [INFO  ] Log - -----------------------------------------------------------------------------------------
2021-08-23 21:36:45,685 [INFO  ] Log - >> Token Created
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am authorized user&amp#27;[0m                                                                                                                                          &amp#27;[90m# stepDefinitions.Given_Steps.i_am_authorized_user()&amp#27;[0m
2021-08-23 21:36:45,686 [INFO  ] Log - >> Request PayLoad Created
2021-08-23 21:36:45,686 [INFO  ] Log - >> 
Request Payload : {
    "payment_methods": ["SWIFT"],
    "beneficiary": {
        "address": {
            "country_code": "AU",
            "street_address": "412 5th Avenue",
            "city": "Seattle",
            "postcode": "98104",
            "state": "Washington"
        },
        "entity_type": "COMPANY",
        "additional_info": {"personal_email": "john.walker@gmail.com"},
        "bank_details": {
            "account_number": "12750852",
            "account_currency": "AUD",
            "bank_country_code": "AU",
            "swift_code": "CTBAAU2S",
            "account_name": "Lee Da Ming",
            "iban": "ES8023100001180000012345",
            "bank_name": "National Australia Bank",
            "account_routing_value1": "083064",
            "transaction_reference": "4140110135",
            "local_clearing_system": "ACH",
            "account_routing_type1": "bsb"
        },
        "company_name": "ABC University"
    },
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL"
}

    Request Payload : {
        "payment_methods": ["SWIFT"],
        "beneficiary": {
            "address": {
                "country_code": "AU",
                "street_address": "412 5th Avenue",
                "city": "Seattle",
                "postcode": "98104",
                "state": "Washington"
            },
            "entity_type": "COMPANY",
            "additional_info": {"personal_email": "john.walker@gmail.com"},
            "bank_details": {
                "account_number": "12750852",
                "account_currency": "AUD",
                "bank_country_code": "AU",
                "swift_code": "CTBAAU2S",
                "account_name": "Lee Da Ming",
                "iban": "ES8023100001180000012345",
                "bank_name": "National Australia Bank",
                "account_routing_value1": "083064",
                "transaction_reference": "4140110135",
                "local_clearing_system": "ACH",
                "account_routing_type1": "bsb"
            },
            "company_name": "ABC University"
        },
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI create request payload with valid data for all keys with &amp#27;[0m&amp#27;[32m&amp#27;[1m"country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"bank_country_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"AU"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m"swift_code"&amp#27;[0m&amp#27;[32m is &amp#27;[0m&amp#27;[32m&amp#27;[1m"CTBAAU2S"&amp#27;[0m                        &amp#27;[90m# stepDefinitions.Given_Steps.i_create_request_payload_with_valid_data_for_all_keys_with_is_is_is(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
2021-08-23 21:36:46,051 [INFO  ] Log - >> Request PayLoad is posted
2021-08-23 21:36:46,052 [INFO  ] Log - >> 
Response : {
    "beneficiary": {
        "additional_info": {
            "personal_email": "john.walker@gmail.com"
        },
        "address": {
            "city": "Seattle",
            "country_code": "AU",
            "postcode": "98104",
            "state": "Washington",
            "street_address": "412 5th Avenue"
        },
        "bank_details": {
            "account_currency": "AUD",
            "account_name": "Lee Da Ming",
            "account_number": "12750852",
            "account_routing_type1": "bsb",
            "account_routing_value1": "083064",
            "bank_country_code": "AU",
            "bank_name": "National Australia Bank",
            "iban": "ES8023100001180000012345",
            "swift_code": "CTBAAU2S"
        },
        "company_name": "ABC University",
        "entity_type": "COMPANY"
    },
    "beneficiary_id": "b078b0f7-4057-406f-9aaa-d368bf89237e",
    "nickname": "ABC University",
    "payer_entity_type": "PERSONAL",
    "payment_methods": [
        "SWIFT"
    ]
}

    Response : {
        "beneficiary": {
            "additional_info": {
                "personal_email": "john.walker@gmail.com"
            },
            "address": {
                "city": "Seattle",
                "country_code": "AU",
                "postcode": "98104",
                "state": "Washington",
                "street_address": "412 5th Avenue"
            },
            "bank_details": {
                "account_currency": "AUD",
                "account_name": "Lee Da Ming",
                "account_number": "12750852",
                "account_routing_type1": "bsb",
                "account_routing_value1": "083064",
                "bank_country_code": "AU",
                "bank_name": "National Australia Bank",
                "iban": "ES8023100001180000012345",
                "swift_code": "CTBAAU2S"
            },
            "company_name": "ABC University",
            "entity_type": "COMPANY"
        },
        "beneficiary_id": "b078b0f7-4057-406f-9aaa-d368bf89237e",
        "nickname": "ABC University",
        "payer_entity_type": "PERSONAL",
        "payment_methods": [
            "SWIFT"
        ]
    }

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI perform post on CreateBeneficiary endpoint&amp#27;[0m                                                                                                                   &amp#27;[90m# stepDefinitions.When_Steps.i_perform_post_on_create_beneficiary_endpoint()&amp#27;[0m
2021-08-23 21:36:46,054 [INFO  ] Log - >> Response status code is 201
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mResponse status code is &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                                                                                                                    &amp#27;[90m# stepDefinitions.Then_Steps.response_status_code_is(java.lang.Integer)&amp#27;[0m
2021-08-23 21:36:46,054 [INFO  ] Log - >> Response status line is HTTP/1.1 201 Created
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mResponse status line is &amp#27;[0m&amp#27;[32m&amp#27;[1m"Created"&amp#27;[0m                                                                                                                               &amp#27;[90m# stepDefinitions.Then_Steps.response_status_line_is(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
</testsuite>